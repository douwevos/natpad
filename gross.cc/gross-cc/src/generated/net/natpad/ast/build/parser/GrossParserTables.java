package net.natpad.ast.build.parser;
import net.natpad.gross.runtime.Symbol;
import net.natpad.gross.runtime.Terminal;
import net.natpad.gross.runtime.NonTerminal;

/* This file was generated by Gross-CC on 2016.11.29 AD at 11:53:23 CET */
public class GrossParserTables {

	public final Symbol symbols[] = new Symbol[] {
		  new Terminal("⟧", 0)
		, new Terminal("⊗", 1)
		, new NonTerminal("◎", 2)
		, new Terminal("IDENTIFIER", 3)
		, new Terminal("LSQBRACK", 4)
		, new Terminal("RSQBRACK", 5)
		, new Terminal("LCUBRACK", 6)
		, new Terminal("RCUBRACK", 7)
		, new Terminal("LPAREN", 8)
		, new Terminal("RPAREN", 9)
		, new Terminal("TYPE", 10)
		, new Terminal("STRING", 11)
		, new Terminal("EXTENDS", 12)
		, new Terminal("SEMI", 13)
		, new Terminal("FORWARD", 14)
		, new Terminal("INDEX_MARK", 15)
		, new Terminal("AST", 16)
		, new Terminal("ARGUMENT", 17)
		, new Terminal("COMMA", 18)
		, new Terminal("METHOD", 19)
		, new Terminal("CODE_TEXT", 20)
		, new Terminal("RETURN", 21)
		, new Terminal("AS", 22)
		, new Terminal("IMPLEMENT", 23)
		, new NonTerminal("spec", 24)
		, new NonTerminal("type_defs", 25)
		, new NonTerminal("type_def", 26)
		, new NonTerminal("ast_lines", 27)
		, new NonTerminal("ast_line", 28)
		, new NonTerminal("ast_type_description", 29)
		, new NonTerminal("opt_as", 30)
		, new NonTerminal("type_description", 31)
		, new NonTerminal("fwd_type_description", 32)
		, new NonTerminal("opt_extends", 33)
		, new NonTerminal("body", 34)
		, new NonTerminal("body_statements", 35)
		, new NonTerminal("body_statement", 36)
		, new NonTerminal("rule_ref_list", 37)
		, new NonTerminal("opt_return", 38)
		, new NonTerminal("rule_ref", 39)
		, new NonTerminal("name", 40)
	};

	public final int stateCount = 63;
	public final String cfgText =
				  "r27,1p6r25,2,0p2r37,1p25r39,1p28r24,2,0p1r25,2p2r24,2p1r37,2p24r31,1p13r27,2p5r26,2p4r28,3p9r29,5,2,"
				+ "3,4p10r32,2p14r28,3p7r28,3p8r39,3p29r29,5,3,4p10r29,5,2,3p10r29,5,2,4p10r33,2p15r35,2,0p19r34,3,1p17"
				+ "r30,2p11r40,1p30r40,1p31r29,5,3p10r29,5,4p10r29,5,2p10r35,2p19r34,3p17r29,5p10r36,4,2p22r36,3p23r36,"
				+ "4p22r38,2p26r36,6p21A0B10S9B24S6B27S8B28S1B25S2B26S3B37S4B3S7B39S5A1B0R0,0B37R0,0B3R0,0B39R0,0A2B10S"
				+ "9B27S11B28S1B37S4B26S10B3S7B39S5A3B10R1,1B27R1,1B28R1,1B37R1,1B3R1,1B39R1,1A4B10S9B16S13B31S18B14S14"
				+ "B26S17B3S7B32S12B39S16B29S15A5B10R2,2B16R2,2B14R2,2B26R2,2B3R2,2A6B0EA7B10R3,3B15S19B16R3,3B14R3,3B2"
				+ "6R3,3B3R3,3A8B0R4,4B28S20B37S4B3S7B39S5A9B11S21A10B10R5,1B27R5,1B28R5,1B37R5,1B3R5,1B39R5,1A11B0R6,4"
				+ "B28S20B37S4B3S7B39S5A12B13S22A13B10S9B26S23A14B10S9B26S24A15B13S25A16B10R7,5B16R7,5B14R7,5B26R7,5B3R"
				+ "7,5A17B13R8,6A18B13S26A19B3S27A20B0R9,7B37R9,7B3R9,7B39R9,7A21B10R10,8B22R10,8B27R10,8B28R10,8B37R10"
				+ ",8B3R10,8B12R10,8B13R10,8B39R10,8B6R10,8A22B0R11,9B37R11,9B3R11,9B39R11,9A23B22S30B33S31B34S32B30S33"
				+ "B12S28B13R12,10B6S29A24B13R13,11A25B0R14,12B37R14,12B3R14,12B39R14,12A26B0R15,13B37R15,13B3R15,13B39"
				+ "R15,13A27B10R16,14B16R16,14B14R16,14B26R16,14B3R16,14A28B11S34A29B7S40B17S37B23S39B35S36B19S35B36S38"
				+ "A30B11S43B3S42B40S41A31B22S30B34S44B30S45B13R17,10B6S29A32B13R18,10A33B34S46B13R19,10B6S29A34B22R20,"
				+ "15B13R20,15B6R20,15A35B11S43B3S42B40S47A36B7S49B17S37B23S39B19S35B36S48A37B11S50A38B7R21,16B17R21,16"
				+ "B23R21,16B19R21,16A39B11S43B3S42B40S51A40B13R22,17A41B13R23,18B6R23,18A42B21R24,19B20R24,19B13R24,19"
				+ "B6R24,19A43B21R25,20B20R25,20B13R25,20B6R25,20A44B13R26,10A45B34S52B13R27,10B6S29A46B13R28,10A47B21S"
				+ "54B20S55B38S53A48B7R29,16B17R29,16B23R29,16B19R29,16A49B13R30,17A50B18S56A51B20S57A52B13R31,10A53B20"
				+ "S58A54B11S43B3S42B40S59A55B7R32,21B17R32,21B23R32,21B19R32,21A56B11S60A57B7R33,22B17R33,22B23R33,22B"
				+ "19R33,22A58B7R34,21B17R34,21B23R34,21B19R34,21A59B20R35,23A60B18S61A61B11S62A62B7R36,24B17R36,24B23R"
				+ "36,24B19R36,24"
			;

}
