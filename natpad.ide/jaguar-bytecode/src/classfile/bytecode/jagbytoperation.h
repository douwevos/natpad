/*
   File:    jagbytoperation.h
   Project: jaguar-bytecode
   Author:  Douwe Vos
   Date:    Oct 30, 2012
   Web:     http://www.natpad.net/
   e-mail:  dmvos2000(at)yahoo.com

   Copyright (C) 2012 Douwe Vos.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */


#ifndef JAGBYTOPERATION_H_
#define JAGBYTOPERATION_H_

typedef enum _JagBytOperation JagBytOperation;

enum _JagBytOperation {

	OP_NOP              = 0x00, //, "nop"),
	OP_ACONST_NULL		= 0x01, //, "aconst_null"),
	OP_ICONST_M1		= 0x02, //, "iconst_m1"),
	OP_ICONST_0			= 0x03, //, "iconst_0"),
	OP_ICONST_1			= 0x04, //, "iconst_1"),
	OP_ICONST_2			= 0x05, //, "iconst_2"),
	OP_ICONST_3			= 0x06, //, "iconst_3"),
	OP_ICONST_4			= 0x07, //, "iconst_4"),
	OP_ICONST_5			= 0x08, //, "iconst_5"),
	OP_LCONST_0			= 0x09, //, "lconst_0"),
	OP_LCONST_1			= 0x0A, //, "lconst_1"),
	OP_FCONST_0			= 0x0B, //, "fconst_0"),
	OP_FCONST_1			= 0x0C, //, "fconst_1"),
	OP_FCONST_2			= 0x0D, //, "fconst_2"),
	OP_DCONST_0			= 0x0E, //, "dconst_0"),
	OP_DCONST_1			= 0x0F, //, "dconst_1"),
	OP_BIPUSH			= 0x10, //, "bipush"),
	OP_SIPUSH			= 0x11, //, "sipush"),
	OP_LDC				= 0x12, //, "ldc"),
	OP_LDC_W			= 0x13, //, "ldc_w"),
	OP_LDC2_W			= 0x14, //, "ldc2_w"),
	OP_ILOAD			= 0x15, //, "iload"),
	OP_LLOAD			= 0x16, //, "lload"),
	OP_FLOAD			= 0x17, //, "fload"),
	OP_DLOAD			= 0x18, //, "dload"),
	OP_ALOAD			= 0x19, //, "aload"),
	OP_ILOAD_0			= 0x1A, //, "iload_0"),
	OP_ILOAD_1			= 0x1B, //, "iload_1"),
	OP_ILOAD_2			= 0x1C, //, "iload_2"),
	OP_ILOAD_3			= 0x1D, //, "iload_3"),
	OP_LLOAD_0			= 0x1E, //, "lload_0"),
	OP_LLOAD_1			= 0x1F, //, "lload_1"),
	OP_LLOAD_2			= 0x20, //, "lload_2"),
	OP_LLOAD_3			= 0x21, //, "lload_3"),
	OP_FLOAD_0			= 0x22, //, "fload_0"),
	OP_FLOAD_1			= 0x23, //, "fload_1"),
	OP_FLOAD_2			= 0x24, //, "fload_2"),
	OP_FLOAD_3			= 0x25, //, "fload_3"),
	OP_DLOAD_0			= 0x26, //, "dload_0"),
	OP_DLOAD_1			= 0x27, //, "dload_1"),
	OP_DLOAD_2			= 0x28, //, "dload_2"),
	OP_DLOAD_3			= 0x29, //, "dload_3"),
	OP_ALOAD_0			= 0x2A, //, "aload_0"),
	OP_ALOAD_1			= 0x2B, //, "aload_1"),
	OP_ALOAD_2			= 0x2C, //, "aload_2"),
	OP_ALOAD_3			= 0x2D, //, "aload_3"),
	OP_IALOAD			= 0x2E, //, "iaload"),
	OP_LALOAD			= 0x2F, //, "laload"),
	OP_FALOAD			= 0x30, //, "faload"),
	OP_DALOAD			= 0x31, //, "daload"),
	OP_AALOAD			= 0x32, //, "aaload"),
	OP_BALOAD			= 0x33, //, "baload"),
	OP_CALOAD			= 0x34, //, "caload"),
	OP_SALOAD			= 0x35, //, "saload"),
	OP_ISTORE			= 0x36, //, "istore"),
	OP_LSTORE			= 0x37, //, "lstore"),
	OP_FSTORE			= 0x38, //, "fstore"),
	OP_DSTORE			= 0x39, //, "dstore"),
	OP_ASTORE			= 0x3A, //, "astore"),
	OP_ISTORE_0			= 0x3B, //, "istore_0"),
	OP_ISTORE_1			= 0x3C, //, "istore_1"),
	OP_ISTORE_2			= 0x3D, //, "istore_2"),
	OP_ISTORE_3			= 0x3E, //, "istore_3"),
	OP_LSTORE_0			= 0x3F, //, "lstore_0"),
	OP_LSTORE_1			= 0x40, //, "lstore_1"),
	OP_LSTORE_2			= 0x41, //, "lstore_2"),
	OP_LSTORE_3			= 0x42, //, "lstore_3"),
	OP_FSTORE_0			= 0x43, //, "fstore_0"),
	OP_FSTORE_1			= 0x44, //, "fstore_1"),
	OP_FSTORE_2			= 0x45, //, "fstore_2"),
	OP_FSTORE_3			= 0x46, //, "fstore_3"),
	OP_DSTORE_0			= 0x47, //, "dstore_0"),
	OP_DSTORE_1			= 0x48, //, "dstore_1"),
	OP_DSTORE_2			= 0x49, //, "dstore_2"),
	OP_DSTORE_3			= 0x4A, //, "dstore_3"),
	OP_ASTORE_0			= 0x4B, //, "astore_0"),
	OP_ASTORE_1			= 0x4C, //, "astore_1"),
	OP_ASTORE_2			= 0x4D, //, "astore_2"),
	OP_ASTORE_3			= 0x4E, //, "astore_3"),
	OP_IASTORE			= 0x4F, //, "iastore"),
	OP_LASTORE			= 0x50, //, "lastore"),
	OP_FASTORE			= 0x51, //, "fastore"),
	OP_DASTORE			= 0x52, //, "dastore"),
	OP_AASTORE			= 0x53, //, "aastore"),
	OP_BASTORE			= 0x54, //, "bastore"),
	OP_CASTORE			= 0x55, //, "castore"),
	OP_SASTORE			= 0x56, //, "sastore"),
	OP_POP				= 0x57, //, "pop"),
	OP_POP2				= 0x58, //, "pop2"),
	OP_DUP				= 0x59, //, "dup"),
	OP_DUP_X1			= 0x5A, //, "dup_x1"),
	OP_DUP_X2			= 0x5B, //, "dup_x2"),
	OP_DUP2				= 0x5C, //, "dup2"),
	OP_DUP2_X1			= 0x5D, //, "dup2_x1"),
	OP_DUP2_X2			= 0x5E, //, "dup2_x2"),
	OP_SWAP				= 0x5F, //, "swap"),
	OP_IADD				= 0x60, //, "iadd"),
	OP_LADD				= 0x61, //, "ladd"),
	OP_FADD				= 0x62, //, "fadd"),
	OP_DADD				= 0x63, //, "dadd"),
	OP_ISUB				= 0x64, //, "isub"),
	OP_LSUB				= 0x65, //, "lsub"),
	OP_FSUB				= 0x66, //, "fsub"),
	OP_DSUB				= 0x67, //, "dsub"),
	OP_IMUL				= 0x68, //, "imul"),
	OP_LMUL				= 0x69, //, "lmul"),
	OP_FMUL				= 0x6A, //, "fmul"),
	OP_DMUL				= 0x6B, //, "dmul"),
	OP_IDIV				= 0x6C, //, "idiv"),
	OP_LDIV				= 0x6D, //, "ldiv"),
	OP_FDIV				= 0x6E, //, "fdiv"),
	OP_DDIV				= 0x6F, //, "ddiv"),
	OP_IREM				= 0x70, //, "irem"),
	OP_LREM				= 0x71, //, "lrem"),
	OP_FREM				= 0x72, //, "frem"),
	OP_DREM				= 0x73, //, "drem"),
	OP_INEG				= 0x74, //, "ineg"),
	OP_LNEG				= 0x75, //, "lneg"),
	OP_FNEG				= 0x76, //, "fneg"),
	OP_DNEG				= 0x77, //, "dneg"),
	OP_ISHL				= 0x78, //, "ishl"),
	OP_LSHL				= 0x79, //, "lshl"),
	OP_ISHR				= 0x7A, //, "ishr"),
	OP_LSHR				= 0x7B, //, "lshr"),
	OP_IUSHR			= 0x7C, //, "iushr"),
	OP_LUSHR			= 0x7D, //, "lushr"),
	OP_IAND				= 0x7E, //, "iand"),
	OP_LAND				= 0x7F, //, "land"),
	OP_IOR				= 0x80, //, "ior"),
	OP_LOR				= 0x81, //, "lor"),
	OP_IXOR				= 0x82, //, "ixor"),
	OP_LXOR				= 0x83, //, "lxor"),
	OP_IINC				= 0x84, //, "iinc"),
	OP_I2L				= 0x85, //, "i2l"),
	OP_I2F				= 0x86, //, "i2f"),
	OP_I2D				= 0x87, //, "i2d"),
	OP_L2I				= 0x88, //, "l2i"),
	OP_L2F				= 0x89, //, "l2f"),
	OP_L2D				= 0x8A, //, "l2d"),
	OP_F2I				= 0x8B, //, "f2i"),
	OP_F2L				= 0x8C, //, "f2l"),
	OP_F2D				= 0x8D, //, "f2d"),
	OP_D2I				= 0x8E, //, "d2i"),
	OP_D2L				= 0x8F, //, "d2l"),
	OP_D2F				= 0x90, //, "d2f"),
	OP_I2B				= 0x91, //, "i2b"),
	OP_I2C				= 0x92, //, "i2c"),
	OP_I2S				= 0x93, //, "i2s"),
	OP_LCMP				= 0x94, //, "lcmp"),
	OP_FCMPL			= 0x95, //, "fcmpl"),
	OP_FCMPG			= 0x96, //, "fcmpg"),
	OP_DCMPL			= 0x97, //, "dcmpl"),
	OP_DCMPG			= 0x98, //, "dcmpg"),
	OP_IFEQ				= 0x99, //, "ifeq"),
	OP_IFNE				= 0x9A, //, "ifne"),
	OP_IFLT				= 0x9B, //, "iflt"),
	OP_IFGE				= 0x9C, //, "ifge"),
	OP_IFGT				= 0x9D, //, "ifgt"),
	OP_IFLE				= 0x9E, //, "ifle"),
	OP_IF_ICMPEQ		= 0x9F, //, "if_icmpeq"),
	OP_IF_ICMPNE		= 0xA0, //, "if_icmpne"),
	OP_IF_ICMPLT		= 0xA1, //, "if_icmplt"),
	OP_IF_ICMPGE		= 0xA2, //, "if_icmpge"),
	OP_IF_ICMPGT		= 0xA3, //, "if_icmpgt"),
	OP_IF_ICMPLE		= 0xA4, //, "if_icmple"),
	OP_IF_ACMPEQ		= 0xA5, //, "if_acmpeq"),
	OP_IF_ACMPNE		= 0xA6, //, "if_acmpme"),
	OP_GOTO				= 0xA7, //, "goto"),
	OP_JSR				= 0xA8, //, "jsr"),
	OP_RET				= 0xA9, //, "ret"),
	OP_TABLESWITCH		= 0xAA, //, "tableswitch"),
	OP_LOOKUPSWITCH		= 0xAB, //, "lookupswitch"),
	OP_IRETURN			= 0xAC, //, "ireturn"),
	OP_LRETURN			= 0xAD, //, "lreturn"),
	OP_FRETURN			= 0xAE, //, "freturn"),
	OP_DRETURN			= 0xAF, //, "dreturn"),
	OP_ARETURN			= 0xB0, //, "areturn"),
	OP_RETURN			= 0xB1, //, "return"),
	OP_GETSTATIC		= 0xB2, //, "getstatic"),
	OP_PUTSTATIC		= 0xB3, //, "putstatic"),
	OP_GETFIELD			= 0xB4, //, "getfield"),
	OP_PUTFIELD			= 0xB5, //, "putfield"),
	OP_INVOKEVIRTUAL	= 0xB6, //, "invokevirtual"),
	OP_INVOKESPECIAL	= 0xB7, //, "invokespecial"),
	OP_INVOKESTATIC		= 0xB8, //, "invokestatic"),
	OP_INVOKEINTERFACE	= 0xB9, //, "invokeinterface"),
	OP_INVOKEDYNAMIC	= 0xBA, //, "invokedynamic"),
	OP_NEW				= 0xBB, //, "new"),
	OP_NEWARRAY			= 0xBC, //, "newarray"),
	OP_ANEWARRAY		= 0xBD, //, "anewarray"),
	OP_ARRAYLENGTH		= 0xBE, //, "arraylength"),
	OP_ATHROW			= 0xBF, //, "athrow"),
	OP_CHECKCAST		= 0xC0, //, "checkcast"),
	OP_INSTANCEOF		= 0xC1, //, "instanceof"),
	OP_MONITORENTER		= 0xC2, //, "monitorenter"),
	OP_MONITOREXIT		= 0xC3, //, "monitorexit"),
	OP_WIDE				= 0xC4, //, "wide"),
	OP_MULTIANEWARRAY	= 0xC5, //, "multianewarray"),
	OP_IFNULL			= 0xC6, //, "ifnull"),
	OP_IFNONNULL		= 0xC7, //, "ifnonnull"),
	OP_GOTO_W			= 0xC8, //, "goto_w"),
	OP_JSR_W			= 0xC9, //, "jsr_w"),
	OP_BREAKPOINT		= 0xCA, //, "breakpoint"),	/* reserved */
//	OP_		(0xCB, ""),
//	OP_		(0xCC, ""),
//	OP_		(0xCD, ""),
//	OP_		(0xCE, ""),
//	OP_		(0xCF, ""),
//	OP_		(0xD0, ""),
//	OP_		(0xD1, ""),
//	OP_		(0xD2, ""),
//	OP_		(0xD3, ""),
//	OP_		(0xD4, ""),
//	OP_		(0xD5, ""),
//	OP_		(0xD6, ""),
//	OP_		(0xD7, ""),
//	OP_		(0xD8, ""),
//	OP_		(0xD9, ""),
//	OP_		(0xDA, ""),
//	OP_		(0xDB, ""),
//	OP_		(0xDC, ""),
//	OP_		(0xDD, ""),
//	OP_		(0xDE, ""),
//	OP_		(0xDF, ""),
//	OP_		(0xE0, ""),
//	OP_		(0xE1, ""),
//	OP_		(0xE2, ""),
//	OP_		(0xE3, ""),
//	OP_		(0xE4, ""),
//	OP_		(0xE5, ""),
//	OP_		(0xE6, ""),
//	OP_		(0xE7, ""),
//	OP_		(0xE8, ""),
//	OP_		(0xE9, ""),
//	OP_		(0xEA, ""),
//	OP_		(0xEB, ""),
//	OP_		(0xEC, ""),
//	OP_		(0xED, ""),
//	OP_		(0xEE, ""),
//	OP_		(0xEF, ""),
//	OP_		(0xF0, ""),
//	OP_		(0xF1, ""),
//	OP_		(0xF2, ""),
//	OP_		(0xF3, ""),
//	OP_		(0xF4, ""),
//	OP_		(0xF5, ""),
//	OP_		(0xF6, ""),
//	OP_		(0xF7, ""),
//	OP_		(0xF8, ""),
//	OP_		(0xF9, ""),
//	OP_		(0xFA, ""),
//	OP_		(0xFB, ""),
//	OP_		(0xFC, ""),
//	OP_		(0xFD, ""),
	OP_IMPDEP1		= 0xFE, //, "impdep1"),		/* reserved */
	OP_IMPDEP2		= 0xFF, //, "impdep2")		/* reserved */
};



//	;
//
//	public final int opcode;
//	public final String text;
//
//	Operation(int opcode, String text) {
//		this.opcode = opcode;
//		this.text = text;
//	}
//
//
//	public static Operation fromOpCode(int opcode) {
//		for(Operation op : Operation.values()) {
//			if (op.opcode==opcode) {
//				return op;
//			}
//		}
//		return null;
//	}
//
//}
//

#endif /* JAGBYTOPERATION_H_ */
