terminal SEMI, RULE_SEPERATOR, ID, COLON, COMMA;
terminal TERMINAL, STAR, PLUS, EXCL, BAR, INDEX_MARK, CODE, CODE_TEXT, NUMBER, IMPORTS, TYPE;
terminal LPAREN, RPAREN, LSQBRACK, RSQBRACK, LCUBRACK, RCUBRACK;


spec                  ≣ f ⟶ term_decl_list:td  production_list:pl  imports_code:im  type_definition_list:tl  code_definition_list:cl
                      ≣ b ⟶ term_decl_list:td  production_list:pl
						;

term_decl_list        ≣ l ⟶ term_decl_list:tdlist term_decl:td
                          ⟶ ;

term_decl             ≣ b ⟶ TERMINAL ids:ids SEMI
                          ⟶ TERMINAL ⊗ SEMI;

ids                   ≣ l ⟶ ids:ids COMMA ID:id
                      ≣ s ⟶ ID:id;




production_list       ≣ l ⟶ production_list:plist production:prod
                      ≣ s ⟶ production:prod ;

production                ⟶ ID:lhsName rhs_rule_list:ruleList SEMI;

rhs_rule_list         ≣ l ⟶ rhs_rule_list:ruleList rhs_rule:rule
                      ≣ s ⟶ rhs_rule:rule;

rhs_rule              ≣ b ⟶ RULE_SEPERATOR rhs_rule_part_list:rulePartList
                      ≣ m ⟶ INDEX_MARK ID:imark RULE_SEPERATOR rhs_rule_part_list:rulePartList;

rhs_rule_part_list    ≣ l ⟶ rhs_rule_part_list:rulePartList rhs_rule_part:rulePart
                          ⟶ ;

rhs_rule_part             ⟶ rhs_entry_complete:entry;

rhs_entry_complete    ≣ b ⟶ rhs_entry:entry
                      ≣ s ⟶ rhs_entry:entry STAR
                      ≣ p ⟶ rhs_entry:entry PLUS
                      ≣ e ⟶ rhs_entry:entry EXCL;

rhs_entry             ≣ s ⟶ LPAREN rhs_sub_list:sub RPAREN
                      ≣ o ⟶ LSQBRACK rhs_sub_list:sub RSQBRACK
                      ≣ b ⟶ ID:symName opt_label:label;

opt_label             ≣ b ⟶ COLON ID:label
                          ⟶ ;

rhs_sub_list          ≣ l ⟶ rhs_sub_list:subList BAR rhs_sub:sub
                      ≣ s ⟶ rhs_sub:sub;

rhs_sub               ≣ l ⟶ rhs_sub:sub rhs_entry_complete:entry
                      ≣ s ⟶ rhs_entry_complete:entry;



imports_code              ⟶ IMPORTS CODE_TEXT:ct;



type_definition_list  ≣ l ⟶ type_definition_list:tdList  type_definition:typeDef
                          ⟶ ;


type_definition           ⟶ TYPE ID:symtype ids:symids SEMI;

code_definition_list  ≣ l ⟶ code_definition_list:cdList code_definition:codeDef
                          ⟶ ;

code_definition           ⟶ CODE prod_rule_ref:ruleRef CODE_TEXT:codeText;

prod_rule_ref         ≣ b ⟶  ID:lhsName
                      ≣ m ⟶  ID:lhsName INDEX_MARK ID:label
                      ≣ n ⟶  ID:lhsName INDEX_MARK NUMBER:offset;


imports ｟
#include <caterpillar.h>
#include "grosymbol.h"
#include "../src/parser/grolocation.h"
#include "../src/parser/file/grobnfall.h"



static GroLocation *l_left_as_location(GroContent *content) {
	long long row;
	int column;
	gro_content_get_left(content, &row, &column);
	return gro_location_new(row, column);
}

static GroLocation *l_right_as_location(GroContent *content) {
	long long row;
	int column;
	gro_content_get_right(content, &row, &column);
	return gro_location_new(row, column);
}
｠


type GroBnfTerminalDeclarationList term_decl_list;
type GroBnfTerminalDeclaration term_decl;
type GroBnfIdList ids;
type GroBnfProductionDefinitionList production_list;
type GroBnfProductionDefinition production;
type GroBnfRhsRuleList rhs_rule_list;
type GroBnfRhsRule rhs_rule;
type GroBnfRhsRulePartList rhs_rule_part_list;
type GroIBnfRhsRulePart rhs_rule_part;
type GroIBnfRhsRulePart rhs_entry_complete;
type GroIBnfRhsRulePart rhs_entry;
type GroBnfString opt_label;
type GroBnfRhsSubList rhs_sub_list;
type GroBnfRhsSub rhs_sub;
type GroBnfImports imports_code;
type GroBnfTypeDefinitionList type_definition_list;
type GroBnfTypeDefinition type_definition;
type GroBnfCodeDefinitionList code_definition_list;
type GroBnfCodeDefinition code_definition;
type GroBnfProductionRuleReference prod_rule_ref;

type GroBnfString ID, CODE_TEXT;
type CatLong NUMBER;



code spec ≣ f                    ｟				result = gro_bnf_spec_new(td, pl, im, tl, cl); ｠
code spec ≣ b                    ｟				result = gro_bnf_spec_new(td, pl, NULL, NULL, NULL); ｠



code term_decl_list ≣ l          ｟				if (td==NULL) { result = cat_ref_ptr(tdlist); } else { result = gro_bnf_terminal_declaration_list_new(tdlist, td); } ｠

code term_decl ≣ b               ｟				result = gro_bnf_terminal_declaration_new(ids); ｠

code ids ≣ l                     ｟				result = gro_bnf_id_list_new(ids, id); ｠
code ids ≣ s                     ｟				result = gro_bnf_id_list_new(NULL, id); ｠

code production_list ≣ l         ｟				result = gro_bnf_production_definition_list_new(plist, prod); ｠
code production_list ≣ s         ｟				result = gro_bnf_production_definition_list_new(NULL, prod); ｠

code production                  ｟				result = gro_bnf_production_definition_new(lhsName, ruleList); ｠

code rhs_rule_list ≣ l           ｟				result = gro_bnf_rhs_rule_list_new(ruleList, rule); ｠
code rhs_rule_list ≣ s           ｟				result = gro_bnf_rhs_rule_list_new(NULL, rule); ｠

code rhs_rule ≣ b                ｟				result = gro_bnf_rhs_rule_new(NULL, rulePartList); ｠
code rhs_rule ≣ m                ｟				result = gro_bnf_rhs_rule_new(imark, rulePartList); ｠

code rhs_rule_part_list ≣ l      ｟				result = gro_bnf_rhs_rule_part_list_new(rulePartList, rulePart); ｠

code rhs_rule_part               ｟				result = cat_ref_ptr(entry); ｠

code rhs_entry_complete ≣ b      ｟				result = cat_ref_ptr(entry); ｠
code rhs_entry_complete ≣ s      ｟				result = gro_bnf_rhs_unary_part_new(entry, GRO_UNARY_OP_ZERO_OR_MORE); ｠
code rhs_entry_complete ≣ p      ｟				result = gro_bnf_rhs_unary_part_new(entry, GRO_UNARY_OP_ONE_OR_MORE); ｠
code rhs_entry_complete ≣ e      ｟				result = gro_bnf_rhs_unary_part_new(entry, GRO_UNARY_OP_OPTIONAL); ｠

code rhs_entry ≣ s               ｟				result = cat_ref_ptr(sub); ｠
code rhs_entry ≣ o               ｟				result = gro_bnf_rhs_unary_part_new(sub, GRO_UNARY_OP_OPTIONAL); ｠
code rhs_entry ≣ b               ｟				result = gro_bnf_rhs_symbol_part_new(symName, label); ｠

code opt_label ≣ b               ｟				result = cat_ref_ptr(label); ｠

code rhs_sub_list ≣ l            ｟				result = gro_bnf_rhs_sub_list_new(subList, sub); ｠
code rhs_sub_list ≣ s            ｟				result = gro_bnf_rhs_sub_list_new(NULL, sub); ｠

code rhs_sub ≣ l                 ｟				result = gro_bnf_rhs_sub_new(sub, entry); ｠
code rhs_sub ≣ s                 ｟				result = gro_bnf_rhs_sub_new(NULL, entry); ｠


code imports_code                ｟				result = gro_bnf_imports_new(ct); ｠

code type_definition_list ≣ l    ｟				result = gro_bnf_type_definition_list_new(tdList, typeDef); ｠

code type_definition             ｟				result = gro_bnf_type_definition_new(symtype, symids); ｠

code code_definition_list ≣ l    ｟				result = gro_bnf_code_definition_list_new(cdList, codeDef); ｠

code code_definition             ｟				result = gro_bnf_code_definition_new(0, ruleRef, codeText); ｠

code prod_rule_ref ≣ b           ｟				result = gro_bnf_production_rule_reference_new(lhsName, NULL); ｠
code prod_rule_ref ≣ m           ｟				result = gro_bnf_production_rule_reference_new(lhsName, label); ｠
code prod_rule_ref ≣ n           ｟				result = gro_bnf_production_rule_reference_new(lhsName, NULL); gro_bnf_production_rule_reference_set_offset(result, offset); ｠

