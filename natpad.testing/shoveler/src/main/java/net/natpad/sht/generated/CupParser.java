/* generated by natpad.cup Tue May 29 21:31:16 CEST 2012 */
package net.natpad.sht.generated;

import java.util.Vector;
import net.natpad.sht.generated.runtime.LrParser;
import net.natpad.sht.generated.runtime.LrParserContext;
import net.natpad.sht.generated.runtime.LrSymbol;
import net.natpad.sht.model.BlockValue;
import net.natpad.sht.model.ListValue;
import net.natpad.sht.model.Model;
import net.natpad.sht.model.Reference;
import net.natpad.sht.model.SimpleValue;
import net.natpad.sht.model.Template;
import net.natpad.sht.model.TemplateArgument;
import net.natpad.sht.model.TemplateCall;
import net.natpad.sht.model.Value;

public class CupParser extends LrParser {

	public CupParser() {}

	/** Production table. */
	protected static final short productionTable[][] = 
	new short[][] {
		new short[] { 0, 2 },
		new short[] { 8, 1 },
		new short[] { 7, 1 },
		new short[] { 7, 1 },
		new short[] { 7, 2 },
		new short[] { 7, 2 },
		new short[] { 9, 5 },
		new short[] { 9, 4 },
		new short[] { 11, 1 },
		new short[] { 11, 3 },
		new short[] { 10, 1 },
		new short[] { 10, 2 },
		new short[] { 5, 2 },
		new short[] { 5, 1 },
		new short[] { 16, 1 },
		new short[] { 16, 1 },
		new short[] { 16, 1 },
		new short[] { 13, 3 },
		new short[] { 14, 2 },
		new short[] { 14, 2 },
		new short[] { 15, 2 },
		new short[] { 4, 2 },
		new short[] { 4, 1 },
		new short[] { 3, 3 },
		new short[] { 12, 3 },
		new short[] { 12, 4 },
		new short[] { 6, 2 },
		new short[] { 6, 3 },
		new short[] { 2, 3 },
		new short[] { 2, 1 },
		new short[] { 1, 1 },
		new short[] { 1, 1 },
		new short[] { 1, 1 },
		new short[] { 17, 1 },
		new short[] { 17, 1 },
		new short[] { 17, 1 }
 };
	/** Access to production table. */
	public short[][] getProductionTable() {
		return productionTable;
	}

	/** Parse-action table. */
	protected static final short[][] actionTable = 
	new short[][] {
		new short[] { 9, 6, -1, 0 },
		new short[] { 0, -3, 9, -3, -1, 0 },
		new short[] { 0, -15, 3, -15, 9, -15, -1, 0 },
		new short[] { 0, 56, -1, 0 },
		new short[] { 0, -2, 9, 6, -1, 0 },
		new short[] { 2, 20, 5, 13, 7, 11, 9, 15, 10, 10, 11, 18, 12, 21, -1, 0 },
		new short[] { 0, -17, 3, -17, 9, -17, -1, 0 },
		new short[] { 0, -16, 3, -16, 9, -16, -1, 0 },
		new short[] { 0, -4, 9, -4, -1, 0 },
		new short[] { 0, -21, 3, -21, 9, -21, -1, 0 },
		new short[] { 8, 47, 9, 44, -1, 0 },
		new short[] { 2, 43, -1, 0 },
		new short[] { 3, -36, 4, -36, 6, -36, 8, -36, -1, 0 },
		new short[] { 0, -20, 3, -20, 9, -20, -1, 0 },
		new short[] { 7, 31, -1, 0 },
		new short[] { 6, 41, -1, 0 },
		new short[] { 0, -23, 3, -23, 4, -23, 8, -23, 9, -23, -1, 0 },
		new short[] { 3, -34, 4, -34, 6, -34, 8, -34, -1, 0 },
		new short[] { 0, -19, 3, -19, 9, -19, -1, 0 },
		new short[] { 2, 20, 3, 22, 5, 13, 9, 29, 11, 18, 12, 21, -1, 0 },
		new short[] { 3, -35, 4, -35, 6, -35, 8, -35, -1, 0 },
		new short[] { 0, -27, 3, -27, 4, -27, 8, -27, 9, -27, -1, 0 },
		new short[] { 3, -32, 4, -32, 8, -32, -1, 0 },
		new short[] { 3, -14, 9, -14, -1, 0 },
		new short[] { 3, -31, 4, -31, 8, -31, -1, 0 },
		new short[] { 3, 40, 4, 34, -1, 0 },
		new short[] { 3, 37, 9, 38, -1, 0 },
		new short[] { 3, -30, 4, -30, 8, -30, -1, 0 },
		new short[] { 2, 20, 5, 13, 7, 31, 9, 15, 10, 10, 11, 18, 12, 21, -1, 0 },
		new short[] { 3, -33, 4, -33, 8, -33, -1, 0 },
		new short[] { 2, 20, 5, 13, 8, 32, 9, 15, 11, 18, 12, 21, -1, 0 },
		new short[] { 2, -25, -1, 0 },
		new short[] { 4, 34, 8, 35, -1, 0 },
		new short[] { 2, 20, 5, 13, 9, 15, 11, 18, 12, 21, -1, 0 },
		new short[] { 2, -26, -1, 0 },
		new short[] { 3, -29, 4, -29, 8, -29, -1, 0 },
		new short[] { 0, -28, 3, -28, 4, -28, 8, -28, 9, -28, -1, 0 },
		new short[] { 2, 20, 5, 13, 9, 15, 10, 10, 11, 18, 12, 21, -1, 0 },
		new short[] { 3, -13, 9, -13, -1, 0 },
		new short[] { 0, -24, 3, -24, 4, -24, 8, -24, 9, -24, -1, 0 },
		new short[] { 0, -18, 3, -18, 9, -18, -1, 0 },
		new short[] { 0, -22, 3, -22, 4, -22, 8, -22, 9, -22, -1, 0 },
		new short[] { 3, 22, 9, 38, -1, 0 },
		new short[] { 2, 20, 4, -11, 5, 13, 8, -11, 9, 15, 11, 18, 12, 21, -1, 0 },
		new short[] { 4, 49, 8, 50, -1, 0 },
		new short[] { 4, -9, 8, -9, -1, 0 },
		new short[] { 6, 48, -1, 0 },
		new short[] { 0, -8, 9, -8, -1, 0 },
		new short[] { 9, 44, -1, 0 },
		new short[] { 6, 51, -1, 0 },
		new short[] { 0, -7, 9, -7, -1, 0 },
		new short[] { 4, -10, 8, -10, -1, 0 },
		new short[] { 4, -12, 8, -12, -1, 0 },
		new short[] { 0, -5, 9, -5, -1, 0 },
		new short[] { 0, -6, 9, -6, -1, 0 },
		new short[] { 0, -1, -1, 0 }
 };
  /** Access to parse-action table. */
	public short[][] getActionTable() {
		return actionTable;
	}

	/** <code>reduce_goto</code> table. */
	protected static final short[][] reduceTable = 
	new short[][] {
		new short[] { 7, 4, 8, 3, 9, 1, 13, 6, 14, 2, 15, 7, 16, 8, -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { 9, 53, 13, 6, 14, 2, 15, 7, 16, 54, -1, -1 },
		new short[] { 3, 13, 4, 18, 6, 16, 12, 11, 17, 15, -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { 10, 45, 11, 44, -1, -1 },
		new short[] { 6, 41, -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { 1, 27, 2, 25, 3, 22, 4, 24, 5, 26, 6, 16, 12, 11, 13, 6, 14, 2, 15, 7, 16, 23, 17, 29, -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { 13, 6, 14, 2, 15, 7, 16, 38, -1, -1 },
		new short[] { -1, -1 },
		new short[] { 3, 13, 4, 18, 6, 16, 12, 11, 17, 15, -1, -1 },
		new short[] { -1, -1 },
		new short[] { 1, 27, 2, 32, 3, 22, 4, 24, 6, 16, 12, 11, 17, 29, -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { 1, 35, 3, 22, 4, 24, 6, 16, 12, 11, 17, 29, -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { 3, 13, 4, 18, 6, 16, 12, 11, 17, 15, -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { 5, 26, 13, 6, 14, 2, 15, 7, 16, 23, -1, -1 },
		new short[] { 1, 52, 3, 22, 4, 24, 6, 16, 12, 11, 17, 29, -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { 10, 51, -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 },
		new short[] { -1, -1 }
 };
	/** Access to <code>reduce_goto</code> table. */
	public short[][] getReduceTable() {
		return reduceTable;
	}

	/** Instance of action encapsulation class. */
	protected Actions actionObject;

	/** Action encapsulation object initializer. */
	protected void initActions() {
		actionObject = new Actions();
	}

	/** Invoke a user supplied parse action. */
	public LrSymbol runAction(LrParserContext parserContext, int actionId) throws Exception {
		/* call code in generated class */
		return actionObject.runAction(parserContext, actionId);
	}

	/** Indicates start state. */
	public int startState() {
		return 0;
	}
	/** Indicates start production. */
	public int startProduction() {
		return 0;
	}

	/** <code>EOF</code> Symbol index. */
	public int eofSymbol() {
		return 0;
	}

	/** <code>error</code> Symbol index. */
	public int errorSymbol() {
		return 1;
	}

}
