
terminal L_LSQBRACE;		# [
terminal L_RSQBRACE;		# ]
terminal L_ARROW;			# ->
terminal L_AND;				# &
terminal L_LT;				# <
terminal L_GT;				# >
terminal L_LE;				# <=
terminal L_GE;				# >=
terminal L_EQ;				# ==
terminal L_NE;				# !=
terminal L_COMMA;			# ,
terminal L_QUESTION_MARK;	# ?
terminal L_DOT;				# .
terminal L_XOR;				# ^
terminal L_MUL;				# *
terminal L_DIV;				# /
terminal L_MOD;				# %
terminal L_SUB;				# -
terminal L_ADD;				# +
terminal L_IS;				# =
terminal L_NOT;				# !
terminal L_NEG;				# ~
terminal L_LPAREN;			# (
terminal L_RPAREN;			# )
terminal L_LCUBRACE;		# {
terminal L_RCUBRACE;		# }
terminal L_VARARGS;			# ...
terminal L_AT;				# @
terminal L_INC;				# ++
terminal L_DEC;				# --
terminal L_COLON;			# :
terminal L_SEMI;			# ;
terminal L_COLON_COLON;		# ::
terminal L_BAR;				# |

terminal L_LOR;				# ||
terminal L_LAND;			# &&

terminal L_MUL_IS;			# *=
terminal L_DIV_IS;			# /=
terminal L_MOD_IS;			# %=
terminal L_ADD_IS;			# +=
terminal L_SUB_IS;			# -=
terminal L_SHL_IS;			# <<=
terminal L_SHR_IS;			# >>=
terminal L_SHRR_IS;			# >>>=
terminal L_AND_IS;			# &=
terminal L_XOR_IS;			# ^=
terminal L_OR_IS;			# |=


terminal K_BOOLEAN, K_BYTE, K_SHORT, K_INT, K_LONG, K_CHAR, K_DOUBLE, K_FLOAT;

terminal IDENTIFIER, LITERAL;

terminal K_EXTENDS, K_SUPER, K_THIS, K_PACKAGE, K_PUBLIC, K_PRIVATE, K_PROTECTED, K_IMPORT, K_CLASS, K_INTERFACE, K_ABSTRACT, K_STATIC, K_FINAL;
terminal K_STRICTFP, K_IMPLEMENTS, K_TRANSIENT, K_VOLATILE, K_SYNCHRONIZED, K_NATIVE, K_VOID, K_THROWS, K_ENUM, K_DEFAULT;
terminal K_IF, K_ASSERT, K_SWITCH, K_CASE, K_BREAK, K_ELSE, K_DO, K_WHILE, K_FOR, K_NEW, K_INSTANCEOF, K_TRY, K_CATCH, K_FINALLY;
terminal K_CONTINUE, K_THROW, L_LPARREN2, K_RETURN;

CompilationUnit                  ⟶ AnnotationsMultiOpt PackageDeclaration;

#PrimitiveType                    ⟶ AnnotationsMultiOpt UnannPrimitiveType ;

PackageDeclaration               ⟶ K_PACKAGE SimpleName L_SEMI 
               ⟶ K_PACKAGE FullNameDot SimpleName L_SEMI 
;


FullNameDot                      ⟶ SimpleName L_DOT
                                 ⟶ FullNameDot SimpleName L_DOT;


SimpleName                       ⟶ IDENTIFIER ;

AnnotationsMultiOpt              ⟶ Annotations
                                 ⟶ ;

Annotations                      ⟶ Annotation
                                 ⟶ Annotations L_AT AnnotationBody ;

Annotation                       ⟶ L_AT AnnotationBody;

Fqn                ⟶ FullNameDot SimpleName
				⟶ SimpleName ;

AnnotationBody                   ⟶ Fqn
                                 ⟶ Fqn L_LPAREN ElementValue L_RPAREN
                                 ⟶ Fqn L_LPAREN                       L_RPAREN
                                 ⟶ Fqn L_LPAREN ElementValuePairList  L_RPAREN ;

ElementValuePairList             ⟶ ElementValuePairList L_COMMA  ElementValuePair
                                 ⟶ ElementValuePair ;

ElementValuePair                 ⟶ SimpleName L_IS ElementValue ;

ElementValue                     ⟶ ConditionalExpression
                                 ⟶ ElementValueArrayInitializer
                                 ⟶ Annotation 
;

ElementValueArrayInitializer     ⟶ L_LCUBRACE  ElementValueList CommaOpt L_RCUBRACE
                                 ⟶ L_LCUBRACE  CommaOpt L_RCUBRACE ;

ElementValueList                 ⟶ ElementValueList L_COMMA  ElementValue
                                 ⟶ ElementValue ;

NumericType                      ⟶ IntegralType
                                 ⟶ FloatingPointType 	;

IntegralType                     ⟶ K_BYTE
                                 ⟶ K_SHORT
                                 ⟶ K_INT
                                 ⟶ K_LONG
                                 ⟶ K_CHAR ;

FloatingPointType                ⟶ K_FLOAT
                                 ⟶ K_DOUBLE ;


ReferenceType                                  ⟶ ClassType
                                               ⟶ ArrayType ;

ArrayType                                      ⟶ AnnotationsMultiOpt UnannPrimitiveType Dims
                                               ⟶ ClassType Dims ;


CommaOpt                                       ⟶ L_COMMA
                                               ⟶ ;

UnannType                                      ⟶ UnannPrimitiveType
                                               ⟶ UnannClassType
                                               ⟶ UnannClassType Dims
                                               ⟶ UnannPrimitiveType Dims ;

UnannPrimitiveType               ⟶ NumericType
                                 ⟶ K_BOOLEAN ;

UnannClassType                                 ⟶ SimpleName TypeArgumentsOpt
                                               ⟶ UnannClassType L_DOT  TypeVariable TypeArgumentsOpt ;

ClassType                                      ⟶ TypeVariable TypeArgumentsOpt
                                               ⟶ ClassType L_DOT TypeVariable TypeArgumentsOpt ;


TypeVariable                                   ⟶ Annotations SimpleName
                                               ⟶ SimpleName ;

TypeArgumentsOpt                               ⟶ TypeArguments
                                               ⟶ ;

TypeArguments                                  ⟶ L_LT TypeArgumentList L_GT ;

TypeArgumentList                               ⟶ TypeArgumentList L_COMMA  TypeArgument
                                               ⟶ TypeArgument ;

TypeArgument                                   ⟶ ReferenceType
                                               ⟶ Wildcard ;

Wildcard          #                             ⟶ AnnotationsMultiOpt L_QUESTION_MARK WildcardBounds
                                               ⟶ AnnotationsMultiOpt L_QUESTION_MARK ;



Primary                                        ⟶ PrimaryNoNewArray
#                                               ⟶ ArrayCreationExpression 
;

PrimaryNoNewArray                              ⟶ LITERAL
                                               ⟶ ClassLiteral
                                               ⟶ K_THIS
                                               ⟶ FullNameDot K_THIS
                                               ⟶ L_LPAREN Expression L_RPAREN
#                                               ⟶ ClassInstanceCreationExpression
#                                               ⟶ FieldAccess
#                                               ⟶ ArrayAccess
#                                               ⟶ MethodInvocation
#                                               ⟶ MethodReference 
;

ClassLiteral                                   ⟶ SimpleName DimMarkerMultiOpt  L_DOT K_CLASS
                                               ⟶ FullNameDot SimpleName DimMarkerMultiOpt  L_DOT K_CLASS
                                               ⟶ UnannPrimitiveType  DimMarkerMultiOpt  L_DOT K_CLASS
#                                               ⟶ K_BOOLEAN  DimMarkerMultiOpt  L_DOT K_CLASS
                                               ⟶ K_VOID L_DOT K_CLASS ;

DimMarkerMultiOpt                              ⟶ DimMarkerMultiOpt L_LSQBRACE L_RSQBRACE
                                               ⟶ ;

Expression                                     ⟶ LambdaExpression
                                               ⟶ AssignmentExpression ;

LambdaExpression                               ⟶ LambdaParameters L_ARROW LambdaBody
                                               ⟶ SimpleName L_ARROW LambdaBody;

LambdaParameters                        #       ⟶ L_LPAREN  FormalParameterListOpt  L_RPAREN
                                               ⟶ L_LPAREN  InferredFormalParameterList L_RPAREN ;

FormalParameterListOpt                         ⟶ FormalParameterList
                                               ⟶ ;

FormalParameterList                            ⟶ ReceiverParameter
                                               ⟶ FormalParameters L_COMMA  LastFormalParameter
                                               ⟶ LastFormalParameter ;

FormalParameters                               ⟶ FormalParameters L_COMMA  FormalParameter
                                               ⟶ FormalParameter
                                               ⟶ ReceiverParameter ;

FormalParameter                                ⟶ VariableModifierMultiOpt UnannType VariableDeclaratorId ;

VariableModifierMultiOpt                       ⟶ VariableModifierMultiOpt VariableModifier
                                               ⟶ ;

VariableModifier                               ⟶ Annotation
                                               ⟶ K_FINAL ;

LastFormalParameter                            ⟶ VariableModifierMultiOpt UnannType  AnnotationsMultiOpt  L_VARARGS  VariableDeclaratorId
                                               ⟶ FormalParameter ;

ReceiverParameter                              ⟶ AnnotationsMultiOpt UnannType K_THIS
                                               ⟶ AnnotationsMultiOpt UnannType IDENTIFIER L_DOT K_THIS ;

VariableDeclaratorId                           ⟶ IDENTIFIER  Dims
                                               ⟶ IDENTIFIER ;

Dims                                           ⟶ Dims AnnotationsMultiOpt L_LSQBRACE L_RSQBRACE
                                               ⟶ AnnotationsMultiOpt L_LSQBRACE L_RSQBRACE;

InferredFormalParameterList                    ⟶ InferredFormalParameterList L_COMMA SimpleName
                                               ⟶ SimpleName ;

LambdaBody                                     ⟶ Expression
#                                               ⟶ Block 
;

AssignmentExpression                           ⟶ ConditionalExpression
                                               ⟶ Assignment ;

Assignment                                     ⟶ LeftHandSide  AssignmentOperator  Expression ;

LeftHandSide                                   ⟶ FullNameDot SimpleName
												⟶ SimpleName
 #                                              ⟶ FieldAccess
#                                               ⟶ ArrayAccess 
;

AssignmentOperator                             ⟶ L_IS
                                               ⟶ L_MUL_IS
                                               ⟶ L_DIV_IS
                                               ⟶ L_MOD_IS
                                               ⟶ L_ADD_IS
                                               ⟶ L_SUB_IS
                                               ⟶ L_SHL_IS
                                               ⟶ L_SHR_IS
                                               ⟶ L_SHRR_IS
                                               ⟶ L_AND_IS
                                               ⟶ L_XOR_IS
                                               ⟶ L_OR_IS ;

ConditionalExpression            ⟶ ConditionalOrExpression
#                                               ⟶ ConditionalOrExpression L_QUESTION_MARK  Expression L_COLON  ConditionalExpression
#                                               ⟶ ConditionalOrExpression L_QUESTION_MARK  Expression L_COLON  LambdaExpression 
;

ConditionalOrExpression          ⟶ ConditionalAndExpression
                                 ⟶ ConditionalOrExpression L_LOR ConditionalAndExpression ;

ConditionalAndExpression         ⟶ InclusiveOrExpression
                                 ⟶ ConditionalAndExpression L_LAND  InclusiveOrExpression ;

InclusiveOrExpression            ⟶ ExclusiveOrExpression
                                 ⟶ InclusiveOrExpression L_BAR  ExclusiveOrExpression ;

ExclusiveOrExpression            ⟶ AndExpression
                                 ⟶ ExclusiveOrExpression L_XOR  AndExpression ;

AndExpression                    ⟶ EqualityExpression
                                 ⟶ AndExpression L_AND  EqualityExpression ;

EqualityExpression               ⟶ RelationalExpression
                                 ⟶ EqualityExpression L_EQ  RelationalExpression
                                 ⟶ EqualityExpression L_NE  RelationalExpression ;

RelationalExpression             ⟶ ShiftExpression
                                 ⟶ ShiftExpressionLt  ShiftExpression
                                 ⟶ ShiftExpressionGt  ShiftExpression
                                 ⟶ RelationalExpression L_LE  ShiftExpression
                                 ⟶ RelationalExpression L_GE  ShiftExpression
                                 ⟶ RelationalExpression K_INSTANCEOF  ReferenceType 
;

ShiftExpression                  ⟶ AdditiveExpression
                                 ⟶ ShiftExpressionLt L_LT AdditiveExpression
                                 ⟶ ShiftExpressionGt L_GT AdditiveExpression
                                 ⟶ ShiftExpressionGt L_GT L_GT AdditiveExpression ;

ShiftExpressionLt                ⟶ ShiftExpression L_LT ;

ShiftExpressionGt                ⟶ ShiftExpression L_GT ;

AdditiveExpression               ⟶ MultiplicativeExpression
                                 ⟶ AdditiveExpression L_ADD  MultiplicativeExpression
                                 ⟶ AdditiveExpression L_SUB  MultiplicativeExpression ;

MultiplicativeExpression         ⟶ UnaryExpression
                                 ⟶ MultiplicativeExpression L_MUL  UnaryExpression
                                 ⟶ MultiplicativeExpression L_DIV  UnaryExpression
                                 ⟶ MultiplicativeExpression L_MOD  UnaryExpression ;

UnaryExpression                  ⟶ IncOrDec UnaryExpression
                                 ⟶ L_ADD UnaryExpression
                                 ⟶ L_SUB UnaryExpression
                                 ⟶ UnaryExpressionNotPlusMinus ;

UnaryExpressionNotPlusMinus      ⟶ PostfixExpression
                                 ⟶ L_NEG UnaryExpression
                                 ⟶ L_NOT UnaryExpression
                                              ⟶ CastExpression  
;

PostfixExpression                              ⟶ Primary               
							 ⟶ FullNameDot SimpleName
							 ⟶ SimpleName
                                 ⟶ PostfixExpression IncOrDec ;

IncOrDec                         ⟶  L_INC
                                 ⟶  L_DEC ;

CastExpression                   ⟶ L_LPAREN  AnnotationsMultiOpt UnannPrimitiveType L_RPAREN  UnaryExpression
#                                               ⟶ L_LPAREN  ReferenceType  AdditionalBoundMultiOpt  L_RPAREN  UnaryExpressionNotPlusMinus
#                                               ⟶ L_LPAREN  ReferenceType  AdditionalBoundMultiOpt  L_RPAREN  LambdaExpression
;

