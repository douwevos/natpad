A NatSnapshot contains a static/final text and thus can not (should not) be modified once it is created. If a line needs to be modified/inserted/deleted a new NatSnapshot will be created. Each NatSnapshot is build up of a NatBlockArray which contains an array of type NatBlock, and each NatBlock exists of multiple NatRawLine instances. A NatBlock typically contains between 512 and 2048 lines (can be modified by constants) . If a block becomes to large then it will be split and if it becomes to small it will be merged when possible. Multiple NatSnapshot instances can exist for a single document. Its also important to know that all changes made to a text causes a lineair list of NatSnapshots (no hierarchy) that can be used as undo/redo buffer. To reduce memory usage multiple NatSnapshot instances can share NatBlocks, NatRawLines and NatBlockArrays. If for example one line gets modified all other lines stay the same, so the next generated NatSnapshot will use the same NatRawLines instances except for the modified one. If in the same example you have multiple NatBlock instances then only one block needs to be rebuild. As mentioned before the NatSnapshot is a final object which means so are its children and therefor NatRawLine, NatBlock and NatBlockArray are also final. This has the advantage of allowing them to be shared over multiple threads without the need for locking (final objects are read only)

The NatSnapshotHook contains all secondary information about a NatSnapshot. The secondary information is separated from the main information, which holds the actual Text. The hook mechanism allows different types of secondary information, but all information is coupled via the lines. The NatSnapshotHook is linked with NatSnapshot on all levels. So there is a NatBlockHook linked with NatBlock and a NatRawLineHook linked with NatRawLine. Since secondary information can be expensive to compute, it is necassery to synchronize old secondary information, that is based on a certain NatSnapshot instance, with changes made in the follow up NatSnapshot. This synchronisation process is split in synchronisation of the NatBlocks and in the sychronisation of NatRawLines. The process tries to reuse as much old info as possible and tries to eliminate search time for this old info. The synchronisation method is not responsible for the actual computation of the additional information it is only responsible for offering the basic structure to different computation algorithms.

So why is the hook info not just part of the NatSnapshot structure? The answer is simple: memory usage. Each NatRawLine should at least have some extra lock information and and at least one reference to the hook information for that line (though this reference might be set to NULL space must be reserved to hold the reference). Counting these two together will probably add an extra 30 bytes per line 




The hook system
===============

The hook system hooks extra information to the model which consists of a NatDocument holding an instance of a NatSnapshot. The hook system starts at the NatDocument level where each hook can store its static information. Each time a new NatSnapshot is created (as a result of a change in the model) a new NatSnapshotHook is created as well. The newly created NatSnapshotHook contains as many as possible NatLineBlockHooks of the preceding NatSnapshotHook and the new create NatLineBlockHooks will hold as many as possible new NatRawLineHooks as possible. Or one could say the NatSnapshotHook is always a synchronized version of another NatSnapshotHook in combination with a new NatSnapshot. 

The hook system delivers an infrastructure 

Currently 3 types of hooks exist:

 * The paint/View hook
 * The lexical hook
 * the syntaxis hook

The paint/view hook holds information about computed view information and is all about the dimensions of lines, blocks and the complete document. Dimensions of these items can change due to changes in the settings. 

					word-wrap enabled					word-wrap disabled
  
  font(size) changes			dimensions: FULL					dimensions: FULL
					paint: ALL						paint: ALL

  tab size changes			dimensions: FULL					dimensions: FULL
					paint: ALL						paint: ALL

  word-wrap changes			dimensions: FULL					dimensions: FULL
					paint: if dimensions changed				paint: if dimensions changed


The hook system 



cd natpad-builder && rm -f natpad_*.deb natpad-*.rpm ../elk/build/elk && /bin/bash build.sh package && fakeroot alien --fixperms --bump=$((SVN_REVISION - 1)) -r natpad_*.deb



rm -f natpad_*.deb natpad-*.rpm natpad/build/natpad && /bin/bash build.sh linux build
rm -f natpad_*.deb natpad-*.rpm natpad/build/natpad && /bin/bash build.sh linux build