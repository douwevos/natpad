The viper virtual resource system must implement some key features

1. provide a tree like structure
2. provide mapping to a file system or a resource management system
3. provide a versioning system


Important to know is that tree manipulations are rare compared to version manipulations. Therefore lightweight locking should be prioritized for version manipulation. 


VipResource can be seen as a reference to the VipResourceNode. As long as a VipResource exists the connected VipResourceNode will exist.
 

A single version of a resource can exist at multiple places i.e: in memory, in a management system and locally on the disk.




LISTENERS
=========
There are two type of listeners. Single resource listeners and structure listeners. All modifications to the structure must generate events 


VipPath path = vip_path_new("/home/superman");
VipResource resource = vip_service_create_resource(path);
VipResourceNode node = resource->getResourceNode();


LOCKING
=======

Deleting
--------

To delete the node "/home/username/" the next nodes need to have a write lock

node :: ""
node :: "home"
node :: "home" "username"
node :: "home" "username" **


adding
------
To add the node "/home/username/foo/bar/" the node ["home" "username" "foo"] must have a write lock.





SCANNING
========
Scanning is the process of reading information of the filesystem and integrate it in the viper structure. Generally a VipResourceNode holds a list of versions with one of them 
holding the filesystem info. Scanning will synchronize the filesystem info with the actual file. Normally a change of a file in the filesystem is accepted automatically. In such 
a case a new version is created and the data is loaded from the system. If an editor on the resource is open and the user is asked to accept    