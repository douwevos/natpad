package net.natpad.gross.build.parser;
import net.natpad.gross.runtime.Symbol;
import net.natpad.gross.runtime.Terminal;
import net.natpad.gross.runtime.NonTerminal;

/* This file was generated by Gross-CC on 2016.11.22 AD at 13:09:17 CET */
public class GrossParserTables {

	public final Symbol symbols[] = new Symbol[] {
		  new Terminal("⟧", 0)
		, new Terminal("⊗", 1)
		, new NonTerminal("◎", 2)
		, new Terminal("SEMI", 3)
		, new Terminal("RULE_SEPERATOR", 4)
		, new Terminal("IDENTIFIER", 5)
		, new Terminal("COLON", 6)
		, new Terminal("COMMA", 7)
		, new Terminal("TERMINAL", 8)
		, new Terminal("STAR", 9)
		, new Terminal("PLUS", 10)
		, new Terminal("EXCL", 11)
		, new Terminal("BAR", 12)
		, new Terminal("INDEX_MARK", 13)
		, new Terminal("CODE", 14)
		, new Terminal("CODE_TEXT", 15)
		, new Terminal("NUMBER", 16)
		, new Terminal("IMPORTS", 17)
		, new Terminal("TYPE", 18)
		, new Terminal("LPAREN", 19)
		, new Terminal("RPAREN", 20)
		, new Terminal("LSQBRACK", 21)
		, new Terminal("RSQBRACK", 22)
		, new Terminal("LCUBRACK", 23)
		, new Terminal("RCUBRACK", 24)
		, new Terminal("AST", 25)
		, new NonTerminal("spec", 26)
		, new NonTerminal("term_decl_list", 27)
		, new NonTerminal("term_decl", 28)
		, new NonTerminal("ids", 29)
		, new NonTerminal("production_list", 30)
		, new NonTerminal("production", 31)
		, new NonTerminal("rhs_rule_list", 32)
		, new NonTerminal("rhs_rule", 33)
		, new NonTerminal("rhs_rule_part_list", 34)
		, new NonTerminal("rhs_rule_part", 35)
		, new NonTerminal("rhs_entry_complete", 36)
		, new NonTerminal("rhs_entry", 37)
		, new NonTerminal("opt_label", 38)
		, new NonTerminal("rhs_sub_list", 39)
		, new NonTerminal("rhs_sub", 40)
		, new NonTerminal("imports_code", 41)
		, new NonTerminal("type_definition_list", 42)
		, new NonTerminal("type_definition", 43)
		, new NonTerminal("code_definition_list", 44)
		, new NonTerminal("code_definition", 45)
		, new NonTerminal("prod_rule_ref", 46)
		, new NonTerminal("ast_descriptions", 47)
		, new NonTerminal("ast_description", 48)
	};

	public final int stateCount = 81;
	public final String cfgText =
				  "r26,2,0r27,2,0r30,1r26,5,0,3,4r26,3,0r30,2r29,1r33,2,1r32,1r26,2r27,2r26,5,0,3r26,5,0,4r42,2,0r44,2,"
				+ "0r47,2r41,2r28,3r32,2r31,3r35,1r34,2,0r37,2,1r36,1r33,2r26,5,3,4r26,3r44,2r26,5,0r42,2r46,1r29,3r33,"
				+ "4,3r37,2r40,1r39,1r36,2r34,2r26,5,3r26,5,4r45,3r48,3r33,4r38,2r37,3r40,2r26,5r43,4r46,3r39,3A0B28S6B"
				+ "26S1B27S5B31S7B30S2B8S3B5S4A1B0EA2B47S9B31S11B17S10B41S8B0R0,0B5S4A3B1S12B29S13B5S14A4B4S17B32S16B13"
				+ "S15B33S18A5B28S20B31S7B30S19B8S3B5S4A6B31R1,1B30R1,1B8R1,1B5R1,1A7B47R2,2B17R2,2B0R2,2B5R2,2A8B45S26"
				+ "B42S22B14S25B0R3,3B43S23B18S24B44S21A9B25S27B48S28B0R4,4A10B15S29A11B47R5,5B17R5,5B0R5,5B5R5,5A12B3S"
				+ "30A13B3S32B7S31A14B3R6,6B7R6,6A15B5S33A16B3S35B4S17B13S15B33S34A17B3R7,7B21S39B37S41B19S40B4R7,7B34S"
				+ "42B35S37B13R7,7B36S36B5S38A18B3R8,8B4R8,8B13R8,8A19B47S44B31S11B17S10B41S43B0R9,0B5S4A20B31R10,1B30R"
				+ "10,1B8R10,1B5R10,1A21B45S45B14S25B0R11,3A22B45S26B14S25B0R12,3B43S47B18S24B44S46A23B45R13,9B14R13,9B"
				+ "0R13,9B18R13,9B44R13,9A24B5S48A25B46S49B5S50A26B14R14,10B0R14,10A27B46S51B5S50A28B25R15,11B0R15,11A2"
				+ "9B45R16,12B42R16,12B14R16,12B0R16,12B43R16,12B18R16,12B44R16,12A30B31R17,-1B30R17,-1B8R17,-1B5R17,-1"
				+ "A31B5S52A32B31R17,13B30R17,13B8R17,13B5R17,13A33B4S53A34B3R18,14B4R18,14B13R18,14A35B47R19,15B17R19,"
				+ "15B0R19,15B5R19,15A36B3R20,16B21R20,16B37R20,16B19R20,16B4R20,16B13R20,16B36R20,16B5R20,16A37B3R21,1"
				+ "7B21R21,17B37R21,17B19R21,17B4R21,17B13R21,17B36R21,17B5R21,17A38B3R22,18B20R22,18B37R22,18B4R22,18B"
				+ "11R22,18B22R22,18B9R22,18B13R22,18B6S54B36R22,18B21R22,18B38S55B19R22,18B12R22,18B10R22,18B5R22,18A3"
				+ "9B21S39B37S41B19S40B39S56B36S57B5S38B40S58A40B21S39B37S41B19S40B39S59B36S57B5S38B40S58A41B3R23,19B20"
				+ "R23,19B37R23,19B4R23,19B11S62B22R23,19B9S61B13R23,19B36R23,19B21R23,19B19R23,19B12R23,19B10S60B5R23,"
				+ "19A42B3R24,7B21S39B37S41B19S40B4R24,7B35S63B13R24,7B36S36B5S38A43B45S26B42S65B14S25B0R25,3B43S23B18S"
				+ "24B44S64A44B25S27B48S28B0R26,4A45B14R27,10B0R27,10A46B45S45B14S25B0R28,3A47B45R29,9B14R29,9B0R29,9B1"
				+ "8R29,9B44R29,9A48B29S66B5S14A49B15S67A50B15R30,20B13S68A51B15S69A52B3R31,21B7R31,21A53B3R32,22B21S39"
				+ "B37S41B19S40B4R32,22B34S70B35S37B13R32,22B36S36B5S38A54B5S71A55B3R33,18B20R33,18B37R33,18B4R33,18B11"
				+ "R33,18B22R33,18B9R33,18B13R33,18B36R33,18B21R33,18B19R33,18B12R33,18B10R33,18B5R33,18A56B12S73B22S72"
				+ "A57B21R34,23B20R34,23B37R34,23B19R34,23B12R34,23B22R34,23B5R34,23A58B21S39B20R35,24B37S41B19S40B12R3"
				+ "5,24B22R35,24B36S74B5S38A59B20S75B12S73A60B3R36,25B21R36,25B20R36,25B37R36,25B19R36,25B12R36,25B4R36"
				+ ",25B22R36,25B13R36,25B36R36,25B5R36,25A61B3R36,26B21R36,26B20R36,26B37R36,26B19R36,26B12R36,26B4R36,"
				+ "26B22R36,26B13R36,26B36R36,26B5R36,26A62B3R36,27B21R36,27B20R36,27B37R36,27B19R36,27B12R36,27B4R36,2"
				+ "7B22R36,27B13R36,27B36R36,27B5R36,27A63B3R37,17B21R37,17B37R37,17B19R37,17B4R37,17B13R37,17B36R37,17"
				+ "B5R37,17A64B45S45B14S25B0R38,3A65B45S26B14S25B0R39,3B43S47B18S24B44S76A66B3S77B7S31A67B14R40,28B0R40"
				+ ",28A68B16S79B5S78A69B25R41,29B0R41,29A70B3R42,22B21S39B37S41B19S40B4R42,22B35S63B13R42,22B36S36B5S38"
				+ "A71B3R43,30B20R43,30B37R43,30B4R43,30B11R43,30B22R43,30B9R43,30B13R43,30B36R43,30B21R43,30B19R43,30B"
				+ "12R43,30B10R43,30B5R43,30A72B3R44,31B20R44,31B37R44,31B4R44,31B11R44,31B22R44,31B9R44,31B13R44,31B36"
				+ "R44,31B21R44,31B19R44,31B12R44,31B10R44,31B5R44,31A73B21S39B37S41B19S40B36S57B5S38B40S80A74B20R45,32"
				+ "B21R45,32B37R45,32B12R45,32B19R45,32B22R45,32B5R45,32A75B3R44,33B20R44,33B37R44,33B4R44,33B11R44,33B"
				+ "22R44,33B9R44,33B13R44,33B36R44,33B21R44,33B19R44,33B12R44,33B10R44,33B5R44,33A76B45S45B14S25B0R46,3"
				+ "A77B45R47,34B14R47,34B0R47,34B18R47,34B44R47,34A78B15R48,35A79B15R48,36A80B21S39B20R49,37B37S41B19S4"
				+ "0B12R49,37B22R49,37B36S74B5S38"
			;

}
