terminal L_LSQBRACE ;		# [
terminal L_RSQBRACE;		# ]
terminal L_ARROW;			# ->
terminal L_AND;				# &
terminal L_LT;				# <
terminal L_GT;				# >
terminal L_LE;				# <=
terminal L_GE;				# >=
terminal L_EQ;				# ==
terminal L_NE;				# !=
terminal L_COMMA;			# ,
terminal L_QUESTION_MARK;	# ?
terminal L_DOT;				# .
terminal L_XOR;				# ^
terminal L_MUL;				# *
terminal L_DIV;				# /
terminal L_MOD;				# %
terminal L_SUB;				# -
terminal L_ADD;				# +
terminal L_IS;				# =
terminal L_NOT;				# !
terminal L_NEG;				# ~
terminal L_LPAREN;			# (
terminal L_RPAREN;			# )
terminal L_LCUBRACE;		# {
terminal L_RCUBRACE;		# }
terminal L_VARARGS;			# ...
terminal L_AT;				# @
terminal L_INC;				# ++
terminal L_DEC;				# --
terminal L_COLON;			# :
terminal L_SEMI;			# ;
terminal L_COLON_COLON;		# ::
terminal L_BAR;				# |

terminal L_LOR;				# ||
terminal L_LAND;			# &&

terminal L_MUL_IS;			# *=
terminal L_DIV_IS;			# /=
terminal L_MOD_IS;			# %=
terminal L_ADD_IS;			# +=
terminal L_SUB_IS;			# -=
terminal L_SHL_IS;			# <<=
terminal L_SHR_IS;			# >>=
terminal L_SHRR_IS;			# >>>=
terminal L_AND_IS;			# &=
terminal L_XOR_IS;			# ^=
terminal L_OR_IS;			# |=

terminal K_BOOLEAN, K_BYTE, K_SHORT, K_INT, K_LONG, K_CHAR, K_DOUBLE, K_FLOAT;

terminal IDENTIFIER, LITERAL;

terminal K_EXTENDS, K_SUPER, K_THIS, K_PACKAGE, K_PUBLIC, K_PRIVATE, K_PROTECTED, K_IMPORT, K_CLASS, K_INTERFACE, K_ABSTRACT, K_STATIC, K_FINAL;
terminal K_STRICTFP, K_IMPLEMENTS, K_TRANSIENT, K_VOLATILE, K_SYNCHRONIZED, K_NATIVE, K_VOID, K_THROWS, K_ENUM, K_DEFAULT;
terminal K_IF, K_ASSERT, K_SWITCH, K_CASE, K_BREAK, K_ELSE, K_DO, K_WHILE, K_FOR, K_NEW, K_INSTANCEOF, K_TRY, K_CATCH, K_FINALLY;
terminal K_CONTINUE, K_THROW, L_LPARREN2, K_RETURN;

CompilationUnit                                ⟶ AnnotationsMultiOpt PackageDeclaration ImportDeclarationMultiOpt TypeDeclarationMultiOpt;

#PrimitiveType                                 ⟶ AnnotationsMultiOpt UnannPrimitiveType ;
PackageDeclaration                             ⟶ K_PACKAGE SimpleName L_SEMI
                                               ⟶ K_PACKAGE FullNameDot SimpleName L_SEMI ;

ImportDeclarationMultiOpt                      ⟶ ImportDeclarationMultiOpt ImportDeclaration
                                               ⟶ ;

ImportDeclaration                              ⟶ SingleTypeImportDeclaration
                                               ⟶ TypeImportOnDemandDeclaration
                                               ⟶ SingleStaticImportDeclaration
                                               ⟶ StaticImportOnDemandDeclaration ;

SingleTypeImportDeclaration                    ⟶ K_IMPORT FullNameDot SimpleName L_SEMI ;

TypeImportOnDemandDeclaration                  ⟶ K_IMPORT FullNameDot L_MUL L_SEMI ;

SingleStaticImportDeclaration                  ⟶ K_IMPORT K_STATIC FullNameDot SimpleName L_SEMI ;

StaticImportOnDemandDeclaration                ⟶ K_IMPORT K_STATIC  FullNameDot L_MUL L_SEMI ;

TypeDeclarationMultiOpt                        ⟶ TypeDeclarationMultiOpt TypeDeclaration
                                               ⟶ ;

TypeDeclaration                                ⟶ ClassDeclaration
#                                              ⟶ InterfaceDeclaration
                                               ⟶ L_SEMI ;

ClassDeclaration                               ⟶ NormalClassDeclaration
#                                               ⟶ EnumDeclaration 
;

NormalClassDeclaration                         ⟶ ClassModifierMultiOpt K_CLASS IDENTIFIER # TypeParametersOpt SuperclassOpt SuperinterfacesOpt
                                                 ClassBody ;

ClassModifierMultiOpt                          ⟶ ClassModifierMultiOpt ClassModifier
                                               ⟶ ;

ClassModifier                                  ⟶ Annotation
                                               ⟶ K_PUBLIC
                                               ⟶ K_PROTECTED
                                               ⟶ K_PRIVATE
                                               ⟶ K_ABSTRACT
                                               ⟶ K_STATIC
                                               ⟶ K_FINAL
                                               ⟶ K_TRANSIENT
                                               ⟶ K_SYNCHRONIZED
                                               ⟶ K_VOLATILE
                                               ⟶ K_NATIVE
                                               ⟶ K_STRICTFP ;

ClassBodyOpt                                   ⟶ ClassBody
                                               ⟶ ;

ClassBody                                      ⟶ L_LCUBRACE ClassBodyDeclarationMultiOpt L_RCUBRACE ;

ClassBodyDeclarationMultiOpt                   ⟶ ClassBodyDeclarationMultiOpt ClassBodyDeclaration
                                               ⟶ ;

ClassBodyDeclaration                           ⟶ ClassMemberDeclaration
#                                               ⟶ InstanceInitializer
#                                               ⟶ StaticInitializer
                                               ⟶ ConstructorDeclaration 
;

ClassMemberDeclaration                         ⟶ FieldDeclaration
                                               ⟶ MethodDeclaration
                                               ⟶ ClassDeclaration
#                                               ⟶ InterfaceDeclaration
                                               ⟶ L_SEMI ;

#TypeParametersOpt                              ⟶ TypeParameters
#                                               ⟶ ;

#TypeParameters                                 ⟶ L_LT TypeParameterList L_GT ;

#TypeParameterList                              ⟶ TypeParameterList L_COMMA TypeParameter
#                                               ⟶ TypeParameter ;

#TypeParameter                                  ⟶ TypeParameterModifierMultiOpt IDENTIFIER TypeBoundOpt ;

#TypeBoundOpt                                   ⟶ TypeBound
#                                               ⟶ ;

TypeParameterModifierMultiOpt                  ⟶ TypeParameterModifierMultiOpt TypeParameterModifier
                                               ⟶ ;

TypeParameterModifier                          ⟶ Annotation ;

TypeBound                                      ⟶ K_EXTENDS TypeVariable
                                               ⟶ K_EXTENDS ClassType AdditionalBoundMultiOpt ;

AdditionalBoundMultiOpt                        ⟶ AdditionalBoundMultiOpt AdditionalBound
                                               ⟶ ;

AdditionalBound                                ⟶ L_AND ClassType ;

ConstructorDeclaration                         ⟶ ClassModifierMultiOpt ConstructorHeader ConstructorBody ;

ConstructorHeader                              ⟶ ConstructorDeclarator ThrowsOpt ;

ConstructorDeclarator                          ⟶ # TypeParametersOpt 
							                      SimpleName L_LPAREN FormalParameterListOpt L_RPAREN ;

ConstructorBody    #                            ⟶ L_LCUBRACE ExplicitConstructorInvocation BlockStatements L_RCUBRACE
                                               ⟶ L_LCUBRACE BlockStatements L_RCUBRACE
#                                               ⟶ L_LCUBRACE ExplicitConstructorInvocation L_RCUBRACE
                                               ⟶ L_LCUBRACE L_RCUBRACE ;

MethodDeclaration                              ⟶ ClassModifierMultiOpt MethodHeader MethodBody ;

MethodHeader                                   ⟶ UnannTypeDims MethodDeclarator ThrowsOpt
                                               ⟶ K_VOID MethodDeclarator ThrowsOpt
#                                               ⟶ TypeParameters AnnotationsMultiOpt2 Result MethodDeclarator ThrowsOpt 
;

MethodDeclarator                               ⟶ IDENTIFIER L_LPAREN FormalParameterListOpt L_RPAREN AnnotatedDims
                                               ⟶ IDENTIFIER L_LPAREN FormalParameterListOpt L_RPAREN ;

ThrowsOpt                                      ⟶ Throws
                                               ⟶ ;

Throws                                         ⟶ K_THROWS ExceptionTypeList ;

ExceptionTypeList                              ⟶ ExceptionTypeList L_COMMA  ExceptionType
                                               ⟶ ExceptionType ;


MethodBody                                     ⟶ Block
                                               ⟶ L_SEMI ;

FieldDeclaration                               ⟶ ClassModifierMultiOpt UnannTypeDims VariableDeclaratorList L_SEMI ;

VariableDeclaratorList                         ⟶ VariableDeclaratorList L_COMMA VariableDeclarator
                                               ⟶ VariableDeclarator  ;

VariableDeclarator                             ⟶ VariableDeclaratorId
                                               ⟶ VariableDeclaratorId  L_IS  VariableInitializer  ;

VariableDeclaratorId                           ⟶ IDENTIFIER AnnotatedDims
                                               ⟶ IDENTIFIER;

VariableInitializer                            ⟶ Expression
#                                               ⟶ ArrayInitializer 
;

Block                                          ⟶ L_LCUBRACE  BlockStatements  L_RCUBRACE
                                               ⟶ L_LCUBRACE   L_RCUBRACE ;

BlockStatements                                ⟶ BlockStatements BlockStatement
                                               ⟶ BlockStatement ;

BlockStatement                                 ⟶ LocalVariableDeclarationStatement
                                               ⟶ ClassDeclaration
                                               ⟶ Statement 
;

LocalVariableDeclarationStatement              ⟶ LocalVariableDeclaration L_SEMI ;

LocalVariableDeclaration                       ⟶ ClassModifierMultiOpt UnannTypeDims  VariableDeclaratorList ;


Statement                                      ⟶ StatementWithoutTrailingSubstatement
#                                               ⟶ LabeledStatement
                                               ⟶ IfThenStatement
                                               ⟶ IfThenElseStatement
#                                               ⟶ WhileStatement
                                               ⟶ ForStatement 
;

StatementNoShortIf                             ⟶ StatementWithoutTrailingSubstatement
#                                               ⟶ LabeledStatementNoShortIf
                                               ⟶ IfThenElseStatementNoShortIf
#                                               ⟶ WhileStatementNoShortIf
#                                               ⟶ ForStatementNoShortIf 
;


StatementWithoutTrailingSubstatement           ⟶ Block
#                                               ⟶ EmptyStatement
                                               ⟶ ExpressionStatement
#                                               ⟶ AssertStatement
#                                               ⟶ SwitchStatement
#                                               ⟶ DoStatement
                                               ⟶ BreakStatement
                                               ⟶ ContinueStatement
                                               ⟶ ReturnStatement
                                               ⟶ SynchronizedStatement
                                               ⟶ ThrowStatement
                                               ⟶ TryStatement 
;

ExpressionStatement                            ⟶ StatementExpression L_SEMI;

BreakStatement                                 ⟶ K_BREAK IDENTIFIER L_SEMI 
                                               ⟶ K_BREAK L_SEMI;

ContinueStatement                              ⟶ K_CONTINUE IDENTIFIER L_SEMI
                                               ⟶ K_CONTINUE            L_SEMI ;

ReturnStatement                                ⟶ K_RETURN ExpressionOpt L_SEMI ;

SynchronizedStatement                          ⟶ K_SYNCHRONIZED L_LPAREN Expression L_RPAREN  Block ;

ThrowStatement                                 ⟶ K_THROW Expression L_SEMI ;

TryStatement                                   ⟶ K_TRY Block Catches
                                               ⟶ K_TRY Block Catches Finally
                                               ⟶ K_TRY Block         Finally
#                                               ⟶ K_TRY ResourceSpecification  Block  CatchesOpt Finally
#                                               ⟶ K_TRY ResourceSpecification  Block  CatchesOpt 
;

CatchesOpt                                     ⟶ Catches
                                               ⟶ ;

Catches                                        ⟶ Catches CatchClause
                                               ⟶ CatchClause ;

CatchClause                                    ⟶ K_CATCH L_LPAREN CatchFormalParameter L_RPAREN  Block ;

CatchFormalParameter                           ⟶ ClassModifierMultiOpt CatchType  VariableDeclaratorId;

CatchType                                      ⟶ UnannClassTypeDimsNoAt BarClassTypeMultiOpt;

BarClassTypeMultiOpt                           ⟶ BarClassTypeMultiOpt L_BAR  ClassType
                                               ⟶ ;

Finally                                        ⟶ K_FINALLY Block ;


StatementExpression                            ⟶ Assignment 
                                               ⟶ ExpressionIncDec 
                                               ⟶ IncDecExpression 
                                               ⟶ MethodInvocation 
# in UnaryExpression                                              ⟶ ClassInstanceCreationExpression 
;


IfThenStatement                                ⟶ K_IF L_LPAREN  Expression L_RPAREN  Statement ;

IfThenElseStatement                            ⟶ K_IF L_LPAREN  Expression L_RPAREN  StatementNoShortIf K_ELSE  Statement ;

IfThenElseStatementNoShortIf                   ⟶ K_IF L_LPAREN  Expression L_RPAREN  StatementNoShortIf K_ELSE  StatementNoShortIf ;

ForStatement                                   ⟶ BasicForStatement
                                               ⟶ EnhancedForStatement ;

ForStatementNoShortIf                          ⟶ BasicForStatementNoShortIf
                                               ⟶ EnhancedForStatementNoShortIf ;

BasicForStatement                              ⟶ K_FOR L_LPAREN  ForInitOpt  L_SEMI  ExpressionOpt  L_SEMI  ForUpdateOpt  L_RPAREN  Statement ;

BasicForStatementNoShortIf                     ⟶ K_FOR L_LPAREN  ForInitOpt  L_SEMI  ExpressionOpt  L_SEMI  ForUpdateOpt  L_RPAREN  StatementNoShortIf ;

ForUpdateOpt                                   ⟶ ForUpdate
                                               ⟶ ;

ExpressionOpt                                  ⟶ Expression
                                               ⟶ ;

ForInitOpt                                     ⟶ ForInit
                                               ⟶ ;

ForInit                                        ⟶ StatementExpressionList
                                               ⟶ LocalVariableDeclaration ;

ForUpdate                                      ⟶ StatementExpressionList ;

StatementExpressionList                        ⟶ StatementExpressionList L_COMMA  StatementExpression
                                               ⟶ StatementExpression ;

EnhancedForStatement                           ⟶ K_FOR L_LPAREN ClassModifierMultiOpt UnannTypeDims  VariableDeclaratorId L_COLON  Expression L_RPAREN  Statement ;

EnhancedForStatementNoShortIf                  ⟶ K_FOR L_LPAREN ClassModifierMultiOpt UnannTypeDims  VariableDeclaratorId L_COLON  Expression L_RPAREN  StatementNoShortIf ;


FullNameDot                                    ⟶ SimpleNameDot
                                               ⟶ FullNameDot SimpleNameDot;


SimpleName                                     ⟶ IDENTIFIER ;

SimpleNameDot                                  ⟶ SimpleName L_DOT ;

SimpleNameDimenstions                          ⟶ SimpleName DimensionsMulti;


AnnotationsMultiOpt                            ⟶ Annotations
                                               ⟶ ;

Annotations                                    ⟶ Annotation
                                               ⟶ Annotations L_AT AnnotationBody ;

Annotation                                     ⟶ L_AT AnnotationBody;

Fqn                                            ⟶ Fqn L_DOT SimpleName
                                               ⟶ SimpleName ;


AnnotationBody                                 ⟶ Fqn
                                               ⟶ Fqn L_LPAREN ElementValue L_RPAREN
                                               ⟶ Fqn L_LPAREN                       L_RPAREN
                                               ⟶ Fqn L_LPAREN ElementValuePairList  L_RPAREN ;

ElementValuePairList                           ⟶ ElementValuePairList L_COMMA  ElementValuePair
                                               ⟶ ElementValuePair ;

ElementValuePair                               ⟶ SimpleName L_IS ElementValue ;

ElementValue                   #  ⟶ ConditionalExpression                                   ⟶ ElementValueArrayInitializer
                                               ⟶ Annotation  ;

ElementValueArrayInitializer                   ⟶ L_LCUBRACE  ElementValueList CommaOpt L_RCUBRACE
                                               ⟶ L_LCUBRACE  CommaOpt L_RCUBRACE ;

ElementValueList                               ⟶ ElementValueList L_COMMA  ElementValue
                                               ⟶ ElementValue ;

NumericType                                    ⟶ IntegralType
                                               ⟶ FloatingPointType 	;

IntegralType                                   ⟶ K_BYTE
                                               ⟶ K_SHORT
                                               ⟶ K_INT
                                               ⟶ K_LONG
                                               ⟶ K_CHAR ;

FloatingPointType                              ⟶ K_FLOAT
                                               ⟶ K_DOUBLE ;

ReferenceType                                  ⟶ ClassType
                                               ⟶ ArrayType ;

ArrayType                                      ⟶ AnnotationsMultiOpt UnannPrimitiveTypeDims
                                               ⟶ ClassType AnnotatedDims
;

CommaOpt                                       ⟶ L_COMMA
                                               ⟶ ;




#UnannClassType                                 ⟶ TypeName
#                                               ⟶ TypeNameDot AnnotatedTypeName
#                                               ⟶ TypeNameDot AnnotatedTypeNames AnnotatedTypeName
#;

UnannPrimitiveType                             ⟶ NumericType
                                               ⟶ K_BOOLEAN ;


UnannPrimitiveTypeDimsNoAt                     ⟶ UnannPrimitiveTypeDimsNoAt DimensionsSimple
                                               ⟶ UnannPrimitiveType
;

UnannClassTypeDimsNoAt                         ⟶ UnannClassTypeBase DimensionsSimple
                                               ⟶ SimpleName DimensionsSimple
                                               ⟶ UnannClassTypeBase
                                               ⟶ SimpleName
;

UnannClassTypeBase
                                               ⟶ SimpleName TypeArguments
                                               ⟶ TypeNameDot AnnotatedTypeName
                                               ⟶ TypeNameDot AnnotatedTypeNames AnnotatedTypeName
;


UnannTypeDims                                  ⟶ UnannTypeDims AnnotatedDims2
#                                              ⟶ UnannTypeDims DimensionsSimple
                                               ⟶ UnannPrimitiveTypeDimsNoAt
                                               ⟶ UnannClassTypeDimsNoAt
;


UnannPrimitiveTypeDims                         ⟶ UnannPrimitiveTypeDims AnnotatedDims
                                               ⟶ UnannPrimitiveType
;


AnnotatedDims2                                 ⟶ Annotations DimensionsSimple
                                               ⟶ AnnotatedDims2 DimensionsSimple
;


AnnotatedDims                                  ⟶ Annotations DimensionsSimple
                                               ⟶ DimensionsSimple
;

AnnotatedVarargs                               ⟶ Annotations L_VARARGS
                                               ⟶ L_VARARGS
;

DimensionsMulti                                ⟶ DimensionsMulti DimensionsSimple
                                               ⟶ DimensionsSimple
;


DimensionsSimple                               ⟶ L_LSQBRACE L_RSQBRACE ;



TypeNameDot ⟶ SimpleName TypeArguments L_DOT 
            ⟶ SimpleNameDot ;


AnnotatedTypeName ⟶ AnnotationsMultiOpt TypeName  ;

AnnotatedTypeNameDot ⟶ AnnotationsMultiOpt TypeNameDot  ;


AnnotatedTypeNames   ⟶ AnnotatedTypeNameDot
                     ⟶ AnnotatedTypeNames AnnotatedTypeNameDot
;

TypeName ⟶ SimpleName TypeArguments
         ⟶ SimpleName
;


ExceptionType                                  ⟶ ClassType;

ClassType                                      ⟶ AnnotatedTypeName
                                               ⟶ AnnotatedTypeNames AnnotatedTypeName
;

TypeVariable                                   ⟶ AnnotationsMultiOpt SimpleName ;

TypeArgumentsOpt                               ⟶ TypeArguments
                                               ⟶ ;

TypeArguments                                  ⟶ L_LT TypeArgumentList L_GT ;

TypeArgumentList                               ⟶ TypeArgumentList L_COMMA  TypeArgument
                                               ⟶ TypeArgument ;

TypeArgument                                   ⟶ ReferenceType
                                               ⟶ Wildcard ;

Wildcard          #                             ⟶ AnnotationsMultiOpt L_QUESTION_MARK WildcardBounds
                                               ⟶ AnnotationsMultiOpt L_QUESTION_MARK ;

Primary                                        ⟶ PrimaryNoNewArray
#                                               ⟶ ArrayCreationExpression 
;

PrimaryNoNewArray                              ⟶ LITERAL
                                               ⟶ ClassLiteral
                                               ⟶ K_THIS
                                               ⟶ FullNameDot K_THIS
                                               ⟶ L_LPAREN Expression L_RPAREN
                                               ⟶ ClassInstanceCreationExpression
#                                               ⟶ FieldAccess
                                               ⟶ ArrayAccess
                                               ⟶ MethodInvocation
#                                               ⟶ MethodReference 
;

ClassLiteral                                   ⟶ SimpleNameDimenstions L_DOT K_CLASS
                                               ⟶ FullNameDot SimpleNameDimenstions L_DOT K_CLASS
                                               ⟶ FullNameDot K_CLASS
                                               ⟶ UnannPrimitiveTypeDimsNoAt L_DOT K_CLASS
#                                               ⟶ K_BOOLEAN  DimMarkerMultiOpt  L_DOT K_CLASS
                                               ⟶ K_VOID L_DOT K_CLASS ;

ClassInstanceCreationExpression                ⟶ UnqualifiedClassInstanceCreationExpression
#                                               ⟶ ExpressionName L_DOT  UnqualifiedClassInstanceCreationExpression
                                               ⟶ Primary L_DOT  UnqualifiedClassInstanceCreationExpression ;

UnqualifiedClassInstanceCreationExpression     ⟶ K_NEW TypeArgumentsOpt  ClassOrInterfaceTypeToInstantiate L_LPAREN  ArgumentListOpt  L_RPAREN  ClassBodyOpt ;

ArgumentListOpt                                ⟶ ArgumentList
                                               ⟶ ;

ArgumentList                                   ⟶ ArgumentList L_COMMA  Expression
                                               ⟶ Expression ;

ClassOrInterfaceTypeToInstantiate              ⟶ AnnotatedIdentifierList
                                               ⟶ AnnotatedIdentifierList  TypeArgumentsOrDiamond ;

AnnotatedIdentifierList                        ⟶ AnnotatedIdentifierList L_DOT AnnotationsMultiOpt IDENTIFIER
                                               ⟶ AnnotationsMultiOpt IDENTIFIER ;

TypeArgumentsOrDiamond                         ⟶ TypeArguments
                                               ⟶ L_LT L_GT ;

ArrayAccess                                    ⟶ SimpleName L_LSQBRACE Expression L_RSQBRACE
                                               ⟶ FullNameDot SimpleName L_LSQBRACE Expression L_RSQBRACE
                                               ⟶ PrimaryNoNewArray L_LSQBRACE Expression L_RSQBRACE;


MethodInvocation                               ⟶ SimpleName                              L_LPAREN  ArgumentListOpt  L_RPAREN
                                               ⟶ FullNameDot TypeArgumentsOpt SimpleName L_LPAREN  ArgumentListOpt  L_RPAREN
                                               ⟶ Primary L_DOT  TypeArgumentsOpt IDENTIFIER L_LPAREN  ArgumentListOpt  L_RPAREN
                                               ⟶ K_SUPER L_DOT  TypeArgumentsOpt IDENTIFIER L_LPAREN  ArgumentListOpt  L_RPAREN
#                                               ⟶ TypeName L_DOT K_SUPER L_DOT  TypeArgumentsOpt IDENTIFIER L_LPAREN  ArgumentListOpt  L_RPAREN 
;

Expression                                     # ⟶ LambdaExpression                                    
                                               ⟶ AssignmentExpression ;

LambdaExpression                               ⟶ LambdaParameters L_ARROW LambdaBody
                                               ⟶ SimpleName L_ARROW LambdaBody;

LambdaParameters                        #       ⟶ L_LPAREN  FormalParameterListOpt  L_RPAREN
                                               ⟶ L_LPAREN  InferredFormalParameterList L_RPAREN ;

FormalParameterListOpt                         ⟶ FormalParameterList
                                               ⟶ ;

FormalParameterList                            ⟶ ReceiverParameter
                                               ⟶ FormalParameters L_COMMA  LastFormalParameter
                                               ⟶ LastFormalParameter ;

FormalParameters                               ⟶ FormalParameters L_COMMA  FormalParameter
                                               ⟶ FormalParameter
                                               ⟶ ReceiverParameter ;

# only FINAL modifier and annotations
FormalParameter                                ⟶ ClassModifierMultiOpt UnannTypeDims VariableDeclaratorId ;

# only FINAL modifier and annotations
LastFormalParameter                            ⟶ ClassModifierMultiOpt UnannTypeDims AnnotatedVarargs  VariableDeclaratorId
#                                               ⟶ ClassModifierMultiOpt UnannTypeDims L_VARARGS VariableDeclaratorId
                                               ⟶ FormalParameter ;

# only annotations
ReceiverParameter                              ⟶ ClassModifierMultiOpt UnannTypeDims K_THIS
                                               ⟶ ClassModifierMultiOpt UnannTypeDims IDENTIFIER L_DOT K_THIS ;

InferredFormalParameterList                    ⟶ InferredFormalParameterList L_COMMA IDENTIFIER
                                               ⟶ IDENTIFIER ;

LambdaBody                                     ⟶ Expression
#                                               ⟶ Block 
;

AssignmentExpression                           ⟶ ConditionalExpression
                                               ⟶ Assignment ;

Assignment                                     ⟶ LeftHandSide  AssignmentOperator  Expression ;

LeftHandSide                                   ⟶ SimpleName
                                               ⟶ FullNameDot SimpleName
 #                                              ⟶ FieldAccess
                                               ⟶ ArrayAccess 
;

AssignmentOperator                             ⟶ L_IS
                                               ⟶ L_MUL_IS
                                               ⟶ L_DIV_IS
                                               ⟶ L_MOD_IS
                                               ⟶ L_ADD_IS
                                               ⟶ L_SUB_IS
                                               ⟶ L_SHL_IS
                                               ⟶ L_SHR_IS
                                               ⟶ L_SHRR_IS
                                               ⟶ L_AND_IS
                                               ⟶ L_XOR_IS
                                               ⟶ L_OR_IS ;

ConditionalExpression                          ⟶ ConditionalOrExpression
                                               ⟶ ConditionalOrExpression L_QUESTION_MARK  Expression L_COLON  ConditionalExpression
                                               ⟶ ConditionalOrExpression L_QUESTION_MARK  Expression L_COLON  LambdaExpression 
;

ConditionalOrExpression                        ⟶ ConditionalAndExpression
                                               ⟶ ConditionalOrExpression L_LOR ConditionalAndExpression ;

ConditionalAndExpression                       ⟶ InclusiveOrExpression
                                               ⟶ ConditionalAndExpression L_LAND  InclusiveOrExpression ;

InclusiveOrExpression                          ⟶ ExclusiveOrExpression
                                               ⟶ InclusiveOrExpression L_BAR  ExclusiveOrExpression ;

ExclusiveOrExpression                          ⟶ AndExpression
                                               ⟶ ExclusiveOrExpression L_XOR  AndExpression ;

AndExpression                                  ⟶ EqualityExpression
                                               ⟶ AndExpression L_AND  EqualityExpression ;

EqualityExpression                             ⟶ RelationalExpression
                                               ⟶ EqualityExpression L_EQ  RelationalExpression
                                               ⟶ EqualityExpression L_NE  RelationalExpression ;

RelationalExpression                           ⟶ ShiftExpression
                                               ⟶ ShiftExpressionLt  ShiftExpression
                                               ⟶ ShiftExpressionGt  ShiftExpression
                                               ⟶ RelationalExpression L_LE  ShiftExpression
                                               ⟶ RelationalExpression L_GE  ShiftExpression
                                               ⟶ RelationalExpression K_INSTANCEOF  ReferenceType 
;

ShiftExpression                                ⟶ AdditiveExpression
                                               ⟶ ShiftExpressionLt L_LT AdditiveExpression
                                               ⟶ ShiftExpressionGt L_GT AdditiveExpression
                                               ⟶ ShiftExpressionGt L_GT L_GT AdditiveExpression ;

ShiftExpressionLt                              ⟶ ShiftExpression L_LT ;

ShiftExpressionGt                              ⟶ ShiftExpression L_GT ;

AdditiveExpression                             ⟶ MultiplicativeExpression
                                               ⟶ AdditiveExpression L_ADD  MultiplicativeExpression
                                               ⟶ AdditiveExpression L_SUB  MultiplicativeExpression ;

MultiplicativeExpression                       ⟶ UnaryExpression
                                               ⟶ MultiplicativeExpression L_MUL  UnaryExpression
                                               ⟶ MultiplicativeExpression L_DIV  UnaryExpression
                                               ⟶ MultiplicativeExpression L_MOD  UnaryExpression ;

UnaryExpression                                ⟶ IncDecExpression
                                               ⟶ L_ADD UnaryExpression
                                               ⟶ L_SUB UnaryExpression
                                               ⟶ UnaryExpressionNotPlusMinus ;

UnaryExpressionNotPlusMinus                    ⟶ PostfixExpression
                                               ⟶ L_NEG UnaryExpression
                                               ⟶ L_NOT UnaryExpression
                                               ⟶ CastExpression  
;


IncDecExpression                               ⟶ IncOrDec UnaryExpression ;

BasicExpression                                ⟶ Primary
                                               ⟶ FullNameDot SimpleName
                                               ⟶ SimpleName
;


PostfixExpression                              ⟶ BasicExpression
                                               ⟶ PostfixExpression IncOrDec ;


ExpressionIncDec                               ⟶ BasicExpression IncOrDec ;

IncOrDec                                       ⟶  L_INC
                                               ⟶  L_DEC ;

CastExpression                                 ⟶ L_LPAREN UnannPrimitiveType L_RPAREN  UnaryExpression
                                               ⟶ L_LPAREN Annotations UnannPrimitiveType L_RPAREN  UnaryExpression
                                               ⟶ L_LPAREN ReferenceType AdditionalBoundMultiOpt  L_RPAREN UnaryExpressionNotPlusMinus
                                               ⟶ L_LPAREN ReferenceType AdditionalBoundMultiOpt  L_RPAREN LambdaExpression
;


#ReferenceType                                  ⟶ ClassType
 #                                              ⟶ ArrayType ;


#UnannPrimitiveType                             ⟶ NumericType
#                                               ⟶ K_BOOLEAN ;

