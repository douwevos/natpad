# https://www.eiffel.org/doc/eiffel/Eiffel%20programming%20language%20syntax#Creation%20instructions

terminal KWDEFERRED, KWEXPANDED, KWSEPARATE, KWCLASS, IDENTIFIER, KWEND, KWINDEXING, SEMICOLON, COLON, COMMA, ARROW, KWOBSOLETE, KWINHERIT;
terminal KWRENAME, KWAS, KWLIKE, KWCURRENT, KWBIT, INTEGER_CONSTANT, KWUNDEFINE, KWREDEFINE, KWEXPORT, KWSELECT, KWALL, KWCREATE, KWFEATURE, KWFROZEN;
terminal KWPREFIX, KWINFIX, QUOTED_UNARY, QUOTED_BINARY, QUOTED_FREE_OPERATOR, LPAREN, RPAREN, KWIS, KWUNIQUE, KWDO, KWONCE, KWEXTERNAL;
terminal MANIFEST_STRING, KWALIAS, KWLOCAL, KWREQUIRE, KWELSE, KWENSURE, KWTHEN, KWINVARIANT, KWVARIANT, COMMENT, KWRESCUE, EXCLAMATION, DOT, COLON_IS;
terminal QUESTION_MARK_IS, KWIF, KWELSEIF, KWINSPECT, KWWHEN, DOUBLE_DOT, CHARACTER_CONSTANT, KWFROM, KWLOOP, KWUNTIL, KWDEBUG, KWCHECK, KWRETRY, KWRESULT;
terminal KWPRECURSOR, DOLLAR, BIT_CONSTANT, INTEGER, REAL, HEXADECIMAL_CONSTANT, PREFIX_OPERATOR, INFIX_OPERATOR, OP_IS, OP_FWSLASH_IS, KWTRUE, KWFALSE;
terminal OP_PLUS, OP_MINUS, LTLT, GTGT, KWOLD, KWSTRIP, KWNOTE, QUESTION_MARK;

#precedence right COMMA, RPAREN;
#precedence left IDENTIFIER;
#precedence left OP_FWSLASH_IS, OP_IS;
#precedence left INFIX_OPERATOR, PREFIX_OPERATOR;

Class_declaration         ⟶ indexing_opt Class_header Formal_generics Obsolete_opt Inheritance_opt Creators_opt Features_opt Invariant_opt KWEND
                          ⟶ [Notes] Class_header [Formal_generics] [Obsolete] [Inheritance] [Creators] [Features] [Notes] [Invariant] [Notes];


Notes                     ⟶ KWNOTE Note_list ;

Note_list                 ⟶ Note_entry 
                          ⟶ Note_list Note_entry;

Note_entry                ⟶ Note_name Note_values [SEMICOLON];

Note_name                 ⟶ IDENTIFIER COLON ;

Note_values               ⟶ Note_values COMMA Note_item
                          ⟶ Note_item ;
                          
Note_item                 ⟶ IDENTIFIER
                          ⟶ Manifest_constant ; 

indexing_opt ⟶
					KWINDEXING Index_list
					KWINDEXING
				⟶
				;
				

Index_list ⟶
					Index_clause
				⟶	Index_list SEMICOLON Index_clause
				;
    
Index_clause ⟶
    				IDENTIFIER COLON Index_terms
    			⟶                    Index_terms
    			;



Index_terms ⟶
					Index_value
				⟶	Index_value COMMA Index_value
				;


Index_value ⟶
    				IDENTIFIER
    			⟶	Manifest_constant
    			;


# ------------------------------


# CHECKED
Class_header ⟶
					Header_mark KWCLASS Class_name
				⟶	            KWCLASS Class_name
				;

# CHECKED
Header_mark ⟶
					KWDEFERRED
				⟶	KWEXPANDED
				⟶	KWFROZEN
				;


# CHECKED
Class_name ⟶
					IDENTIFIER
				;

# ------------------------------



Formal_generics ⟶
					Formal_generic_list
				⟶
				;
    
    
Formal_generic_list ⟶
					Formal_generic
				⟶	Formal_generic_list COMMA Formal_generic
				;


Formal_generic ⟶
					Formal_generic_name Constraint
				⟶	Formal_generic_name
    			;
    
Formal_generic_name ⟶
    				IDENTIFIER
    			;

Constraint ⟶
					ARROW Class_type
				; 



# ---------------------------


Obsolete_opt ⟶
					Obsolete
				⟶	
				;

Obsolete ⟶
    				KWOBSOLETE Message
    			;

Message ⟶
    				MANIFEST_STRING
    			; 
    			

    			
# -------------------------



Inheritance_opt ⟶
					Inheritance
				⟶
				;

Inheritance ⟶
					KWINHERIT Parent_list
				;
Parent_list ⟶
					Parent
				⟶	Parent_list SEMICOLON Parent
				;

Parent ⟶
					Class_type Feature_adaptation
				⟶	Class_type
				;

Feature_adaptation ⟶
					Rename New_exports Undefine Redefine Select KWEND
				⟶	Rename New_exports Undefine Redefine        KWEND
				⟶	Rename New_exports Undefine          Select KWEND
				⟶	Rename New_exports Undefine                 KWEND
				⟶	Rename New_exports          Redefine Select KWEND
				⟶	Rename New_exports          Redefine        KWEND
				⟶	Rename New_exports                   Select KWEND
				⟶	Rename New_exports                          KWEND
				⟶	Rename             Undefine Redefine Select KWEND
				⟶	Rename             Undefine Redefine        KWEND
				⟶	Rename             Undefine          Select KWEND
				⟶	Rename             Undefine                 KWEND
				⟶	Rename                      Redefine Select KWEND
				⟶	Rename                      Redefine        KWEND
				⟶	Rename                               Select KWEND
				⟶	Rename                                      KWEND
				⟶	       New_exports Undefine Redefine Select KWEND
				⟶	       New_exports Undefine Redefine        KWEND
				⟶	       New_exports Undefine          Select KWEND
				⟶	       New_exports Undefine                 KWEND
				⟶	       New_exports          Redefine Select KWEND
				⟶	       New_exports          Redefine        KWEND
				⟶	       New_exports                   Select KWEND
				⟶	       New_exports                          KWEND
				⟶	                   Undefine Redefine Select KWEND
				⟶	                   Undefine Redefine        KWEND
				⟶	                   Undefine          Select KWEND
				⟶	                   Undefine                 KWEND
				⟶	                            Redefine Select KWEND
				⟶	                            Redefine        KWEND
				⟶	                                     Select KWEND
				;

# ---------------------------------

Rename ⟶
					KWRENAME Rename_list
				;

Rename_list ⟶
					Rename_pair
				⟶	Rename_list COMMA Rename_pair
				; 

Rename_pair ⟶
					Feature_name KWAS Feature_name
				;

# ------------------------------------

New_exports ⟶
					KWEXPORT New_export_list
				;


New_export_list ⟶
					New_export_item
					New_export_list SEMICOLON New_export_item
				;

New_export_item ⟶
					Clients Feature_set
				;
				
Feature_set ⟶
					Feature_list
				⟶	KWALL
				;

Feature_list ⟶
					Feature_name
				⟶	Feature_list COMMA Feature_name
				;

# ------------------------------------

Clients ⟶
					Class_name
				⟶	Clients COMMA Class_name
				;

# ------------------------------------

Redefine ⟶
					KWREDEFINE Feature_list
				;

Undefine ⟶
					KWUNDEFINE Feature_list
				;


Select ⟶
					KWSELECT Feature_list
				;


# ------------------------------------



Creators_opt ⟶
					Creators
				⟶
				;

Creators ⟶
					Creator         
				⟶	Creators Creator
				;



Creator         ⟶ KWCREATE Creation_clause Procedure_list ;


Creation_clause ⟶ [Clients] [COMMENT] ;



# Clients resolvses into the same set of tokens as the original Procedure_list
Procedure_list ⟶
					Clients
				;

#Procedure_list ⟶
#    				Procedure_name
#    			⟶	Procedure_list COMMA Procedure_name
#    			;
#    			
#Procedure_name ⟶
#			    	IDENTIFIER 
#			    ;

# ------------------------------------


Features_opt ⟶
					Features
				⟶
				;

Features ⟶
					Feature
				⟶	Features Feature
				;



					
Feature ⟶
					KWFEATURE [Clients] [COMMENT] Feature_declaration_list
				;

    
Feature_declaration_list     ⟶ Feature_declaration SEMICOLON
                             ⟶ Feature_declaration_list Feature_declaration SEMICOLON ;     
    
    
# ------------------------------------



Feature_declaration ⟶
    				New_feature_list Declaration_body
    			;

Declaration_body ⟶
    				Formal_arguments Type_mark Constant_or_routine
    			⟶	Formal_arguments Type_mark
    			⟶	Formal_arguments           Constant_or_routine
    			⟶	Formal_arguments
    			⟶	                 Type_mark Constant_or_routine
    			⟶	                 Type_mark
    			⟶	                           Constant_or_routine
    			⟶	                 
    			;
    				
Constant_or_routine ⟶
    				KWIS Feature_value
    			⟶	Routine
    			;
    			
Feature_value ⟶
    				Manifest_constant
    			⟶	Unique
    			;

Unique ⟶
    				KWUNIQUE
    			;
    			
# -------------------------------



New_feature_list ⟶
					New_feature
				⟶	New_feature_list COMMA New_feature
				;

New_feature ⟶
					KWFROZEN Feature_name
				⟶	         Feature_name
				;


# --------------------------------

Feature_name ⟶
    				Class_name
    			⟶	Prefix
    			⟶	Infix
    			;
    				



Prefix ⟶
					KWPREFIX quoted_prefix_operator
				;

Infix ⟶
					KWINFIX quoted_infix_operator
				;

quoted_prefix_operator ⟶
					QUOTED_UNARY
				⟶	QUOTED_FREE_OPERATOR
				;
				
quoted_infix_operator ⟶
					QUOTED_BINARY
				⟶	QUOTED_FREE_OPERATOR
				;




# -----------------



Formal_arguments ⟶
					LPAREN Entity_declaration_list RPAREN
				;
				
Entity_declaration_list ⟶
    				                        Entity_declaration_group [SEMICOLON]
    			⟶	Entity_declaration_list Entity_declaration_group [SEMICOLON]
    			;

Entity_declaration_group ⟶
					Identifier_list Type_mark
				;

Identifier_list ⟶
					IDENTIFIER
    			⟶	Identifier_list COMMA IDENTIFIER
    			;

Type_mark ⟶
					COLON Type
				; 


# ------------------------

# incomplete
Routine           ⟶ Obsolete_opt [COMMENT] Precondition_opt Local_declarations_opt Routine_body Postcondition_opt Rescue_opt KWEND ; 

				
Precondition_opt  ⟶ Precondition
                  ⟶ ;
				
Local_declarations_opt ⟶
					Local_declarations
				⟶
				;
				
Postcondition_opt ⟶
					Postcondition
				⟶
				;

Rescue_opt ⟶
					Rescue
				⟶
				;

# -----------------------------


Routine_body ⟶
					Effective
				⟶	Deferred
				;

Effective ⟶
					Internal
				⟶	External
				;

Internal ⟶
					Routine_mark Compound
				;

Routine_mark ⟶
					KWDO
				⟶	KWONCE
				;

Deferred ⟶
					KWDEFERRED
				; 

# ------------------------


External ⟶
					KWEXTERNAL Language_name External_name
				⟶	KWEXTERNAL Language_name
				;

Language_name ⟶
					MANIFEST_STRING
				;
				
External_name ⟶
					KWALIAS MANIFEST_STRING
				; 
    
    
# ------------------------

Local_declarations ⟶
					KWLOCAL Entity_declaration_list
				;     
    
# ------------------------


Precondition ⟶
					KWREQUIRE KWELSE Assertion
				⟶	KWREQUIRE        Assertion
				;
				
Postcondition ⟶
					KWENSURE KWTHEN Assertion
				⟶	KWENSURE        Assertion
				;


Invariant_opt ⟶
					Invariant
				⟶
				;

Invariant ⟶
					KWINVARIANT Assertion
				;

Assertion ⟶
					Assertion Assertion_clause SEMICOLON
				⟶	Assertion_clause SEMICOLON
				; 

Assertion_clause ⟶
					Tag_mark Unlabeled_assertion_clause
				⟶	         Unlabeled_assertion_clause
				;

Unlabeled_assertion_clause ⟶
					Boolean_expression
				⟶	COMMENT
				;

Tag_mark ⟶
					Tag COLON
				;

Tag ⟶
					IDENTIFIER 
				;


Rescue ⟶
					KWRESCUE Compound
				;



# ------------------------

Type ⟶
					Class_type
				⟶	Class_type_expanded
				⟶	Class_type_separate
				⟶	Anchored
				⟶	Bit_type
				;


Class_type ⟶
					Class_name Type_list
				⟶	Class_name 
				;

Type_list ⟶
					Type
				⟶	Type_list COMMA Type
				;

Class_type_expanded ⟶
					KWEXPANDED Class_type
				;
    
Class_type_separate ⟶
					KWSEPARATE Class_type
				;

Bit_type ⟶
    				KWBIT Bit_length
    			;


# incomplet
Bit_length ⟶
					INTEGER_CONSTANT
				⟶	Attribute
				;

Anchored ⟶
					KWLIKE Anchor
				;

Anchor ⟶
					IDENTIFIER
				⟶	KWCURRENT
				; 
				
# ------------------



Compound ⟶
					Compound Instruction SEMICOLON
				⟶	Instruction SEMICOLON
				; 

Instruction ⟶
					Creation
				⟶	Call
				⟶	Assignment
				⟶	Assignment_attempt
				⟶	Conditional
				⟶	Multi_branch
				⟶	Loop
				⟶	Debug
				⟶	Check
				⟶	Retry
				⟶	Null_instruction
				; 


# ------------------

Creation ⟶
					EXCLAMATION Type EXCLAMATION Writable Creation_call
				⟶	EXCLAMATION      EXCLAMATION Writable Creation_call
				⟶	EXCLAMATION Type EXCLAMATION Writable
				⟶	EXCLAMATION      EXCLAMATION Writable
				;


Creation_call ⟶
					DOT Clients Actuals
				⟶	DOT Clients
				;


# ------------------

Assignment ⟶
					Writable COLON_IS Expression
				;
    
Assignment_attempt ⟶
					Writable QUESTION_MARK_IS Expression
				;


# ------------------


Conditional ⟶
					KWIF Then_part_list Else_part KWEND
				⟶	KWIF Then_part_list           KWEND
				;

Then_part_list ⟶
					Then_part_list KWELSEIF Then_part
				⟶	Then_part
				;
    
Then_part ⟶
					Boolean_expression KWTHEN Compound
				;

Else_part ⟶
					KWELSE Compound
				;


# ------------------


Multi_branch ⟶
					KWINSPECT Expression When_part_list Else_part KWEND
				⟶	KWINSPECT Expression                Else_part KWEND
				⟶	KWINSPECT Expression When_part_list           KWEND
				⟶	KWINSPECT Expression                          KWEND
				;

When_part_list ⟶
					KWWHEN When_part
				⟶	When_part_list KWWHEN When_part
				;

When_part ⟶
					Choices KWTHEN Compound
				⟶	        KWTHEN Compound
				;

Choices ⟶
					Choices COMMA Choice
				⟶	Choice
				;


Choice ⟶
					Choice_constant
				⟶	Interval
				;


Interval ⟶
					Choice_constant DOUBLE_DOT Choice_constant
				;


Choice_constant ⟶
					Integer_constant
				⟶	CHARACTER_CONSTANT
				⟶	Attribute
				;

# ----------------------


Loop ⟶
					Initialization Invariant_opt Variant Loop_body KWEND
				⟶	Initialization Invariant_opt         Loop_body KWEND
				;					

Initialization ⟶
					KWFROM Compound
				;

Variant ⟶
					KWVARIANT Tag_mark Expression
				⟶	KWVARIANT          Expression
				;

Loop_body ⟶
					Exit KWLOOP Compound
				;

Exit ⟶
					KWUNTIL Boolean_expression
				; 


# --------------------

Debug ⟶
					KWDEBUG Debug_keys Compound KWEND
				⟶	KWDEBUG            Compound KWEND
				;


Debug_keys ⟶
					LPAREN Debug_key_list RPAREN
				;

Debug_key_list ⟶
					Debug_key_list COMMA Debug_key
				⟶	Debug_key
				;


Debug_key ⟶
					MANIFEST_STRING
				;


# --------------------

Check ⟶
					KWCHECK Assertion KWEND
				;

# --------------------

Retry ⟶
					KWRETRY
				;

# --------------------

Null_instruction ⟶
    			;

# --------------------

Call ⟶
					Qualified_call
				⟶	Precursor
				;

Qualified_call ⟶
					Call_qualifier Call_chain
				⟶	               Call_chain
				;

Call_qualifier ⟶
					Call_target DOT
				;

Call_target ⟶
					Parenthesized
				⟶	KWRESULT
				⟶	KWCURRENT
				⟶	Precursor
				;

Call_chain ⟶
					Unqualified_call
				⟶	Call_chain DOT Unqualified_call
				;

Unqualified_call ⟶
					IDENTIFIER Actuals
				⟶	IDENTIFIER
				; 


# -------------------		

Precursor ⟶
					Parent_qualification KWPRECURSOR Actuals
				⟶	                     KWPRECURSOR Actuals
				⟶	Parent_qualification KWPRECURSOR
				⟶	                     KWPRECURSOR
				;
					
				
Parent_qualification ⟶
    				Class_name
    			⟶	Parent_qualification Class_name
    			;


# -------------------

Attribute ⟶
					IDENTIFIER
				;

        

Writable ⟶
					IDENTIFIER
				⟶	KWRESULT
				;


# -------------------


Actuals ⟶
					LPAREN Actual_list RPAREN
				;

Actual_list ⟶
					Actual
				⟶	Actual_list COMMA Actual
				;

Actual ⟶
					Expression
				⟶	Address
				;

Address ⟶
					DOLLAR Address_mark
				;

Address_mark ⟶
					Feature_name
				⟶	KWCURRENT
				⟶	KWRESULT 
				;

				
# -------------------

Expression ⟶
					KWCURRENT
				⟶	KWRESULT
				⟶	Call
				⟶	Operator_expression
				⟶	Equality
				⟶	Manifest_array
				⟶	Old
			    ⟶	Strip
			    ⟶	Boolean_constant
			    ⟶	BIT_CONSTANT
			    ⟶	INTEGER
			    ⟶	REAL
			    ⟶	MANIFEST_STRING
			    ⟶	CHARACTER_CONSTANT
			    ⟶	Wide_character_constant
			    ⟶	Wide_manifest_string
			    ⟶	HEXADECIMAL_CONSTANT
			    ;


Boolean_expression ⟶
					Expression
				;
				
				
# -----------------------

Operator_expression ⟶
					Parenthesized
				⟶	Unary_expression
				⟶	Binary_expression
				;

Parenthesized ⟶
					LPAREN Expression RPAREN
				;

Unary_expression ⟶
					PREFIX_OPERATOR Expression
				;

Binary_expression ⟶
					Expression INFIX_OPERATOR Expression
				;


# -----------------------

Equality ⟶
					Expression Comparison Expression
				;

Comparison ⟶
					OP_IS
				⟶	OP_FWSLASH_IS
				;

    
# -----------------------


Manifest_constant ⟶
					Boolean_constant
				⟶	CHARACTER_CONSTANT
				⟶	Integer_constant
				⟶	Real_constant
				⟶	MANIFEST_STRING
				⟶	BIT_CONSTANT
				⟶	Wide_character_constant
				⟶	Wide_manifest_string
				⟶	HEXADECIMAL_CONSTANT
				;

Boolean_constant ⟶
					KWTRUE
				⟶	KWFALSE
				;

Integer_constant ⟶
					Sign INTEGER
				⟶	     INTEGER
				;


Real_constant ⟶
					Sign REAL
				⟶	     REAL
				;

Sign ⟶
					OP_PLUS
				⟶	OP_MINUS
				;

Wide_character_constant ⟶
					DOLLAR CHARACTER_CONSTANT
				;

Wide_manifest_string ⟶
					DOLLAR MANIFEST_STRING
				;

# -----------------------

Manifest_array ⟶
					LTLT Expression_list GTGT
				;

Expression_list ⟶
					Expression_list COMMA Expression
				⟶	Expression
				;

# -----------------------


Old ⟶
					KWOLD Expression
				;

# -----------------------


Strip ⟶
					KWSTRIP LPAREN Attribute_list RPAREN
				;

Attribute_list ⟶
					Attribute_list COMMA Attribute
				⟶	Attribute
				;


