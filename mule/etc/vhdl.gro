# source: http://www.filewatcher.com/p/freehdl-debuginfo-0.0.7-2.el6.i686.rpm.3989148/usr/src/debug/freehdl-0.0.7/vaul/bison-parser.yy.html
#
# VHDL is described in the IEEE 1076-1993 standard. This is the new standard the old is version 1076-1987
#
# An online version of this standard can be found at:
#   http://www.dacya.ucm.es/dani/manual.pdf


terminal KWACCESS, KWAFTER, KWALIAS, KWALL, KWAND, KWARCHITECTURE, KWARRAY, KWASSERT, KWATTRIBUTE, KWBEGIN, KWBLOCK, KWBODY;
terminal KWBUFFER, KWBUS, KWCASE, KWCOMPONENT, KWCONFIGURATION, KWCONSTANT, KWDISCONNECT, KWDOWNTO, KWELSE, KWELSIF;
terminal KWEND, KWENTITY, KWEXIT, KWFILE, KWFOR, KWFUNCTION, KWGENERATE, KWGENERIC, KWGUARDED, KWIF, KWIMPURE, KWIN, KWINERTIAL, KWINOUT, KWIS, KWLABEL;
terminal KWLIBRARY, KWLINKAGE, KWLOOP, KWMAP, KWNAND, KWNEW, KWNEXT, KWNOR, KWNULL, KWOF, KWON, KWOPEN, KWOR, KWOTHERS, KWOUT, KWPACKAGE, KWPORT;
terminal KWPOSTPONED, KWPROCEDURE, KWPROCESS, KWPURE, KWRANGE, KWREVERSE_RANGE, KWRECORD, KWREGISTER, KWREJECT, KWREPORT, KWRETURN, KWROL, KWROR;
terminal KWSELECT, KWSEVERITY, KWSIGNAL, KWSLA, KWSLL, KWSRA, KWSRL, KWSUBTYPE, KWTHEN, KWTO, KWTRANSPORT, KWTYPE, KWUNITS, KWUNTIL, KWUSE, KWVARIABLE;
terminal KWWAIT, KWWHEN, KWWHILE, KWWITH, KWXNOR, KWXOR;

terminal OPPEQ, OPPNE, OPPLT, OPPLE, OPPGT, OPPGE;
terminal PLUS, MINUS, AMPERSAND, STAR, SLASH, KWMOD, KWREM, DOUBLESTAR, KWABS, KWNOT; 

terminal APOSTROPHE, LEFTPAREN, RIGHTPAREN, COMMA, VARASSIGN, COLON, SEMICOLON, ARROW, BOX, BAR, DOT;
terminal NUMBERLITERAL, CHARACTERLITERAL, IDENTIFIER, STRINGLITERAL;



start1                            ⟶ design_units_opt ;

design_units_opt                  ⟶ design_units_opt design_unit
                                  ⟶ ;

designator                        ⟶ IDENTIFIER
                                  ⟶ STRINGLITERAL ;

literal                           ⟶ NUMBERLITERAL		    
                                  ⟶ CHARACTERLITERAL
                                  ⟶ physical_literal_no_default
                                  ⟶ KWNULL ;

enumeration_literal               ⟶ CHARACTERLITERAL
                                  ⟶ IDENTIFIER ;

physical_literal                  ⟶ opt_NUMBERLITERAL IDENTIFIER ;

opt_NUMBERLITERAL                 ⟶ NUMBERLITERAL
                                  ⟶ ;

physical_literal_no_default       ⟶ NUMBERLITERAL IDENTIFIER ;

idf_list                          ⟶ IDENTIFIER
                                  ⟶ idf_list COMMA IDENTIFIER ;

#------------------------------------------
#--  Desing Unit
#------------------------------------------

design_unit                       ⟶ context_list lib_unit ;

context_list                      ⟶ context_list context_item
                                  ⟶ ;

lib_unit                          ⟶ entity_declaration
                                  ⟶ configuration_declaration		
                                  ⟶ package_declaration
                                  ⟶ architecture_body 
                                  ⟶ package_body ;

context_item                      ⟶ lib_clause
                                  ⟶ use_clause
				;

lib_clause                        ⟶ KWLIBRARY idf_list SEMICOLON
				;

use_clause                        ⟶ KWUSE sel_list SEMICOLON
				;

sel_list                          ⟶ sel_name
                                  ⟶ sel_list COMMA sel_name
				;

#------------------------------------------
#--  Library Units
#------------------------------------------

entity_declaration                ⟶ KWENTITY IDENTIFIER KWIS opt_generic_and_port_clauses entity_decl_part opt_entity_stats KWEND opt_entity_end SEMICOLON ;

opt_generic_and_port_clauses      ⟶ generic_clause
                                  ⟶ port_clause
                                  ⟶ generic_clause port_clause
                                  ⟶ port_clause generic_clause
                                  ⟶ ;


#opt_generic_clause               ⟶
#					generic_clause
#                                  ⟶ / nothing /
#				;


generic_clause                    ⟶ KWGENERIC generic_interf_list SEMICOLON ;

#opt_port_clause ⟶
#					port_clause
#                                  ⟶ / nothing /
#				;


port_clause                       ⟶ KWPORT port_interf_list SEMICOLON ;

entity_decl_part                  ⟶ entity_decl_part entity_decltve_item
                                  ⟶ ;

opt_entity_stats                  ⟶ KWBEGIN concurrent_stats
                                  ⟶ ;

opt_entity_end                    ⟶ KWENTITY opt_IDENTIFIER   
                                  ⟶ opt_IDENTIFIER ;

opt_IDENTIFIER                    ⟶
                                  ⟶ IDENTIFIER ;

architecture_body                 ⟶ KWARCHITECTURE IDENTIFIER KWOF IDENTIFIER KWIS
                                      architecture_decl_part
                                    KWBEGIN
                                      opt_concurrent_stats
                                    KWEND opt_architecture_end SEMICOLON ;
    

architecture_decl_part            ⟶
                                  ⟶ architecture_decl_part block_decltve_item ;

opt_architecture_end              ⟶ KWARCHITECTURE opt_IDENTIFIER 
                                  ⟶ opt_IDENTIFIER ;


configuration_declaration         ⟶ KWCONFIGURATION IDENTIFIER KWOF IDENTIFIER KWIS configuration_decl_part block_config KWEND opt_configuration_end SEMICOLON ;

configuration_decl_part           ⟶
                                  ⟶ configuration_decl_part config_decltve_item ;

opt_configuration_end             ⟶ KWCONFIGURATION opt_IDENTIFIER    
                                  ⟶ opt_IDENTIFIER ;
    

package_declaration               ⟶ KWPACKAGE IDENTIFIER KWIS package_decl_part KWEND opt_package_end SEMICOLON ;

package_decl_part                 ⟶
                                  ⟶ package_decl_part package_decltve_item ;

opt_package_end                   ⟶ KWPACKAGE opt_IDENTIFIER	
                                  ⟶ opt_IDENTIFIER ;


package_body                      ⟶ KWPACKAGE KWBODY IDENTIFIER KWIS package_body_decl_part KWEND opt_package_body_end SEMICOLON ;

package_body_decl_part            ⟶
                                  ⟶ package_body_decl_part package_body_decltve_item ;

opt_package_body_end              ⟶ KWPACKAGE KWBODY opt_IDENTIFIER   
                                  ⟶ opt_IDENTIFIER ;

#------------------------------------------
#--  Declarative Item
#------------------------------------------

common_decltve_item               ⟶ type_decl
                                  ⟶ subtype_decl  
                                  ⟶ constant_decl
                                  ⟶ file_decl
                                  ⟶ alias_decl
                                  ⟶ subprog_decl
                                  ⟶ use_clause	
                                  ⟶ ⊗ SEMICOLON ;

entity_decltve_item               ⟶ common_decltve_item
                                  ⟶ subprog_body
                                  ⟶ attribute_decl
                                  ⟶ attribute_spec
                                  ⟶ disconnection_spec
                                  ⟶ signal_decl ;

block_decltve_item                ⟶ common_decltve_item
                                  ⟶ subprog_body
                                  ⟶ comp_decl
                                  ⟶ attribute_decl
                                  ⟶ attribute_spec
                                  ⟶ config_spec
                                  ⟶ disconnection_spec
                                  ⟶ signal_decl ;

package_decltve_item              ⟶ common_decltve_item
                                  ⟶ comp_decl
                                  ⟶ attribute_decl
                                  ⟶ attribute_spec
                                  ⟶ disconnection_spec
                                  ⟶ signal_decl ;

package_body_decltve_item         ⟶ common_decltve_item
                                  ⟶ subprog_body ;

subprog_decltve_item              ⟶ common_decltve_item
                                  ⟶ subprog_body
                                  ⟶ attribute_decl
                                  ⟶ attribute_spec
                                  ⟶ variable_decl ;

proc_decltve_item                 ⟶ common_decltve_item
                                  ⟶ subprog_body
                                  ⟶ attribute_decl
                                  ⟶ attribute_spec
                                  ⟶ variable_decl ;

config_decltve_item               ⟶ attribute_spec
                                  ⟶ use_clause ;

#------------------------------------------
#--  Subprograms
#------------------------------------------

subprog_decl                      ⟶ subprog_spec SEMICOLON ;

subprog_spec                      ⟶ proc_or_func_spec ;

proc_or_func_spec                 ⟶ KWPROCEDURE IDENTIFIER opt_interf_list
                                  ⟶ pure_or_impure KWFUNCTION designator opt_interf_list KWRETURN subtype_indic ;

pure_or_impure                    ⟶
                                  ⟶ KWPURE          
                                  ⟶ KWIMPURE ;

opt_interf_list                   ⟶
                                  ⟶ interf_list ;

subprog_body                      ⟶ subprog_spec KWIS
                                        subprog_body_decl_part
                                    KWBEGIN
                                        seq_stats
                                    KWEND opt_function_or_procedure_t opt_designator SEMICOLON ;


opt_function_or_procedure_t       ⟶
                                  ⟶ KWPROCEDURE 
                                  ⟶ KWFUNCTION ;

opt_designator                    ⟶
                                  ⟶ designator ;

subprog_body_decl_part            ⟶
                                  ⟶ subprog_body_decl_part subprog_decltve_item ;

#--------------------------------------------------
#--  Interface Lists and Associaton Lists
#--------------------------------------------------

port_interf_list                  ⟶ interf_list_1 ;

generic_interf_list               ⟶ interf_list_1 ;

interf_list                       ⟶ interf_list_1 ;

interf_list_1                     ⟶ LEFTPAREN interf_element opt_more_interf_elements RIGHTPAREN ;

opt_more_interf_elements          ⟶
                                  ⟶ opt_more_interf_elements SEMICOLON interf_element ;

interf_element                    ⟶ opt_object_class idf_list COLON opt_mode subtype_indic opt_KWBUS opt_var_init ;

opt_KWBUS                         ⟶
                                  ⟶ KWBUS ;

opt_mode                          ⟶
                                  ⟶ mode ;
  
opt_object_class                  ⟶
                                  ⟶ object_class ;
  
mode                              ⟶ KWIN
                                  ⟶ KWOUT
                                  ⟶ KWINOUT
                                  ⟶ KWBUFFER
                                  ⟶ KWLINKAGE ;

association_list                  ⟶ LEFTPAREN association_elements association_list_1 RIGHTPAREN ;

named_association_list            ⟶ association_list ;

association_list_1                ⟶
                                  ⟶ association_list_1 COMMA association_elements ;


gen_association_list              ⟶ LEFTPAREN gen_association_elements gen_association_list_1 RIGHTPAREN ;

gen_association_list_1            ⟶
                                  ⟶ gen_association_list_1 COMMA gen_association_elements ;

association_elements              ⟶ formal_part ARROW actual_part
                                  ⟶ actual_part ;

gen_association_elements          ⟶ association_elements
                                  ⟶ discrete_range1 ;

formal_part                       ⟶ name
                                  ⟶ formal_part BAR name ;

actual_part                       ⟶ expr_or_attr
                                  ⟶ KWOPEN ;

#--------------------------------------------------
#--  Names and Expressions
#--------------------------------------------------

mark                              ⟶ IDENTIFIER
                                  ⟶ sel_name ;

expr                              ⟶ expr_or_attr ;

expr_or_attr                      ⟶ and_expression	    
                                  ⟶ or_expression	    
                                  ⟶ xor_expression	     
                                  ⟶ xnor_expression     
                                  ⟶ relation_or_attr    
                                  ⟶ relation KWNAND relation
                                  ⟶ relation KWNOR relation ;

relation                          ⟶ relation_or_attr ;

and_expression                    ⟶ relation KWAND relation
                                  ⟶ and_expression KWAND relation ;

or_expression                     ⟶ relation KWOR relation
                                  ⟶ or_expression KWOR relation ;

xor_expression                    ⟶ relation KWXOR relation
                                  ⟶ xor_expression KWXOR relation ;

xnor_expression                   ⟶ relation KWXNOR relation
                                  ⟶ xnor_expression KWXNOR relation ;

relation_or_attr                  ⟶ shift_expression_or_attr
                                  ⟶ shift_expression OPPEQ shift_expression
                                  ⟶ shift_expression OPPNE shift_expression
                                  ⟶ shift_expression OPPLT shift_expression
                                  ⟶ shift_expression OPPLE shift_expression
                                  ⟶ shift_expression OPPGT shift_expression
                                  ⟶ shift_expression OPPGE shift_expression ;

shift_expression                  ⟶ shift_expression_or_attr ;

shift_expression_or_attr          ⟶ simple_expression_or_attr
                                  ⟶ simple_expression KWSLL simple_expression
                                  ⟶ simple_expression KWSRL simple_expression
                                  ⟶ simple_expression KWSLA simple_expression
                                  ⟶ simple_expression KWSRA simple_expression
                                  ⟶ simple_expression KWROL simple_expression
                                  ⟶ simple_expression KWROR simple_expression ;

simple_expression                 ⟶ simple_expression_or_attr ;

simple_expression_or_attr         ⟶ signed_term_or_attr
                                  ⟶ simple_expression PLUS term
                                  ⟶ simple_expression MINUS term
                                  ⟶ simple_expression AMPERSAND term ;

signed_term_or_attr               ⟶ term_or_attr
                                  ⟶ PLUS term
                                  ⟶ MINUS term ; 

term                              ⟶ term_or_attr ;

term_or_attr                      ⟶ factor_or_attr
                                  ⟶ term STAR factor
                                  ⟶ term SLASH factor
                                  ⟶ term KWMOD factor
                                  ⟶ term KWREM factor ;

factor                            ⟶ factor_or_attr ;

factor_or_attr                    ⟶ primary_or_attr
                                  ⟶ primary DOUBLESTAR primary
                                  ⟶ KWABS primary
                                  ⟶ KWNOT primary ;
 
primary                           ⟶ primary_or_attr ;

primary_or_attr                   ⟶ name
                                  ⟶ literal		
                                  ⟶ aggregate	
                                  ⟶ qualified_expr	
                                  ⟶ allocator	
                                  ⟶ LEFTPAREN expr RIGHTPAREN ;


name                              ⟶ mark
                                  ⟶ name2 ;

name2                             ⟶ STRINGLITERAL
                                  ⟶ attribute_name	    
                                  ⟶ ifts_name ;

sel_name                          ⟶ name DOT suffix ;

simple_sel_name                   ⟶ simple_sel_name DOT IDENTIFIER
                                  ⟶ IDENTIFIER ;

suffix                            ⟶ designator
                                  ⟶ CHARACTERLITERAL
                                  ⟶ KWALL ;

ifts_name                         ⟶ mark gen_association_list   
                                  ⟶ name2 gen_association_list ;


attribute_prefix                  ⟶ mark APOSTROPHE 
                                  ⟶ name2 APOSTROPHE ;


range_attribute_name              ⟶ attribute_prefix KWRANGE
                                  ⟶ attribute_prefix KWREVERSE_RANGE ;


attribute_name                    ⟶ attribute_prefix IDENTIFIER
                                  ⟶ range_attribute_name ;


#attribute_name                    ⟶ mark APOSTROPHE IDENTIFIER
#                                  ⟶ name2 APOSTROPHE IDENTIFIER
#                                  ⟶ mark APOSTROPHE KWRANGE
#                                  ⟶ name2 APOSTROPHE KWRANGE ;


range_attribute_name_with_param    ⟶ range_attribute_name opt_attribute_param ;



#attribute_name_with_param          ⟶ attribute_name opt_attribute_param ;


opt_attribute_param               ⟶
                                  ⟶ LEFTPAREN expr RIGHTPAREN ;

aggregate                         ⟶ rev_element_association_list2 RIGHTPAREN
                                  ⟶ LEFTPAREN choices ARROW expr RIGHTPAREN ;

rev_element_association_list2     ⟶ LEFTPAREN element_association COMMA element_association
                                  ⟶ rev_element_association_list2 COMMA element_association ;

qualified_expr                    ⟶ mark APOSTROPHE LEFTPAREN expr RIGHTPAREN
                                  ⟶ mark APOSTROPHE aggregate ;

allocator                         ⟶ KWNEW mark mark opt_index_association_list
                                  ⟶ KWNEW mark opt_index_association_list
                                  ⟶ KWNEW qualified_expr ;

opt_index_association_list        ⟶
                                  ⟶ gen_association_list ;

#--------------------------------------------------
#--  Element Association and Choices
#--------------------------------------------------

element_association               ⟶ choices ARROW expr
                                  ⟶ expr ;

choices                           ⟶ choice opt_more_choices ;

opt_more_choices                  ⟶
                                  ⟶ opt_more_choices BAR choice ;

choice                            ⟶ expr_or_attr
                                  ⟶ discrete_range1
                                  ⟶ KWOTHERS ;

#--------------------------------------------------
#--  Type Declarations
#--------------------------------------------------

decl_Identifier                   ⟶ IDENTIFIER ;

type_decl                         ⟶ KWTYPE decl_Identifier opt_type_def SEMICOLON ;

opt_type_def                      ⟶
                                  ⟶ KWIS type_definition ;

type_definition                   ⟶ enumeration_type_definition     
                                  ⟶ range_constraint
                                  ⟶ physical_type_definition        
                                  ⟶ unconstrained_array_definition  
                                  ⟶ constrained_array_definition  
                                  ⟶ record_type_definition
                                  ⟶ access_type_definition
                                  ⟶ file_type_definition ;

enumeration_type_definition       ⟶ LEFTPAREN enumeration_literal_decls RIGHTPAREN ;

enumeration_literal_decls         ⟶ enumeration_literal opt_more_enumeration_literals ;

opt_more_enumeration_literals     ⟶
                                  ⟶ COMMA enumeration_literal_decls ;

physical_type_definition          ⟶ range_constraint KWUNITS primary_unit_decl secondary_unit_decls KWEND KWUNITS ;

secondary_unit_decls              ⟶
                                  ⟶ secondary_unit_decls secondary_unit_decl ;

primary_unit_decl                 ⟶ IDENTIFIER SEMICOLON ;

secondary_unit_decl               ⟶ IDENTIFIER OPPEQ physical_literal SEMICOLON ;

unconstrained_array_definition    ⟶ KWARRAY LEFTPAREN index_subtype_defs RIGHTPAREN KWOF subtype_indic ;

index_subtype_defs                ⟶ index_subtype_definition opt_more_index_subtype_defs ;

opt_more_index_subtype_defs       ⟶
                                  ⟶ COMMA index_subtype_definition opt_more_index_subtype_defs ;

index_subtype_definition          ⟶ mark KWRANGE BOX ;

constrained_array_definition      ⟶ KWARRAY index_constraint KWOF subtype_indic ;

opt_record_end                    ⟶
                                  ⟶ IDENTIFIER
                                  ⟶ KWRECORD opt_IDENTIFIER ;   

record_type_definition            ⟶ KWRECORD element_decl opt_more_element_decls KWEND opt_record_end ;

opt_more_element_decls            ⟶
                                  ⟶ opt_more_element_decls element_decl ;

element_decl                      ⟶ idf_list COLON subtype_indic SEMICOLON ;

access_type_definition            ⟶ KWACCESS subtype_indic_opt_incomplete ;

file_type_definition              ⟶ KWFILE KWOF mark ;

#--------------------------------------------------
#--  Subtypes and Constraints
#--------------------------------------------------

subtype_decl                      ⟶ KWSUBTYPE decl_Identifier KWIS subtype_indic SEMICOLON ;

subtype_indic                     ⟶ subtype_indic_opt_incomplete ;
  
	
subtype_indic_opt_incomplete      ⟶ mark opt_index_constraint   
                                  ⟶ subtype_indic1 ;

subtype_indic1                    ⟶ mark mark range_constraint
                                  ⟶ mark range_constraint
                                  ⟶ mark mark opt_index_constraint ;

opt_index_constraint              ⟶
                                  ⟶ gen_association_list ;

range_constraint                  ⟶ KWRANGE range_spec2 ;

index_constraint                  ⟶ LEFTPAREN discrete_range opt_more_discrete_ranges RIGHTPAREN ;
  
opt_more_discrete_ranges          ⟶
                                  ⟶ opt_more_discrete_ranges COMMA discrete_range ;

discrete_range                    ⟶ subtype_indic
                                  ⟶ range_spec ;

discrete_range1                   ⟶ subtype_indic1
                                  ⟶ expr_or_attr direction expr ;


opt_direction_expr                ⟶
                                  ⟶ direction expr ;


# XXX - range_spec contains a shift/reduce conflict, because an
#   attribute_name_with_param can be an expr.  range_spec2 solves this
#   but can not be used as a discrete range because it conflicts with
#   ordinary expressions.  I think.
#
#   A possible solution would maybe be to elevate ranges to be
#   expressions and disambiguate this purely on a semantic basis. 

range_spec                        ⟶ range_attribute_name_with_param 
                                  ⟶ expr direction expr ;

range_spec2                       ⟶ expr_or_attr opt_direction_expr ;

direction                         ⟶ KWTO
                                  ⟶ KWDOWNTO ;

#--------------------------------------------------
#--  Objects, Aliases, Files, Disconnections
#--------------------------------------------------

constant_decl                     ⟶ KWCONSTANT idf_list COLON subtype_indic opt_var_init SEMICOLON ;
  

signal_decl                       ⟶ KWSIGNAL idf_list COLON subtype_indic opt_signal_kind opt_var_init SEMICOLON ;

opt_signal_kind                   ⟶
                                  ⟶ signal_kind ;

variable_decl                     ⟶ KWVARIABLE idf_list COLON subtype_indic opt_var_init SEMICOLON ;

opt_var_init                      ⟶
                                  ⟶ VARASSIGN expr ;

object_class                      ⟶ KWCONSTANT
                                  ⟶ KWSIGNAL
                                  ⟶ KWVARIABLE
                                  ⟶ KWFILE ;

signal_kind                       ⟶ KWBUS
                                  ⟶ KWREGISTER ;

alias_decl                        ⟶ KWALIAS IDENTIFIER COLON subtype_indic KWIS name SEMICOLON ;  

file_decl                         ⟶ KWFILE IDENTIFIER COLON subtype_indic opt_open_mode opt_file_name SEMICOLON ;

opt_open_mode                     ⟶
                                  ⟶ KWOPEN expr ;

opt_file_name                     ⟶
                                  ⟶ KWIS opt_file_mode expr ;

opt_file_mode                     ⟶
                                  ⟶ KWIN
                                  ⟶ KWOUT ;

disconnection_spec                ⟶ KWDISCONNECT signal_list COLON mark KWAFTER expr SEMICOLON ;

signal_list                       ⟶ signal_name opt_more_signal_list 
                                  ⟶ KWOTHERS                  
                                  ⟶ KWALL ;

opt_more_signal_list              ⟶
                                  ⟶ opt_more_signal_list COMMA signal_name ;

#--------------------------------------------------
#--  Attribute Declarations and Specifications
#--------------------------------------------------

attribute_decl                    ⟶ KWATTRIBUTE IDENTIFIER COLON mark SEMICOLON ;

attribute_spec                    ⟶ KWATTRIBUTE IDENTIFIER KWOF entity_spec KWIS expr SEMICOLON ;

entity_spec                       ⟶ entity_name_list COLON entity_class ;

entity_name_list                  ⟶ designator opt_more_entity_name_list
                                  ⟶ KWOTHERS
                                  ⟶ KWALL ;

opt_more_entity_name_list         ⟶
                                  ⟶ opt_more_entity_name_list COMMA designator ;

entity_class                      ⟶ KWENTITY
                                  ⟶ KWARCHITECTURE
                                  ⟶ KWPACKAGE
                                  ⟶ KWCONFIGURATION
                                  ⟶ KWCOMPONENT
                                  ⟶ KWLABEL
                                  ⟶ KWTYPE
                                  ⟶ KWSUBTYPE
                                  ⟶ KWPROCEDURE     
                                  ⟶ KWFUNCTION      
                                  ⟶ KWSIGNAL
                                  ⟶ KWVARIABLE
                                  ⟶ KWCONSTANT ;

#--------------------------------------------------
#--  Schemes
#--------------------------------------------------

generation_scheme                 ⟶ if_scheme    
                                  ⟶ for_scheme ;

iteration_scheme                  ⟶ for_scheme   
                                  ⟶ while_scheme ;

if_scheme                         ⟶ KWIF condition ;

for_scheme                        ⟶ KWFOR IDENTIFIER KWIN discrete_range ;

while_scheme                      ⟶ KWWHILE condition ;

#--------------------------------------------------
#--  Concurrent Statements
#--------------------------------------------------

concurrent_stats                  ⟶ opt_concurrent_stats concurrent_stat ;

opt_concurrent_stats              ⟶
                                  ⟶ opt_concurrent_stats concurrent_stat ;

concurrent_stat                   ⟶ concurrent_stat_1 ;

concurrent_stat_1                 ⟶ concurrent_stat_without_label
                                  ⟶ concurrent_stat_with_label ;

concurrent_stat_without_label     ⟶ concurrent_stat_without_label_1 ;

concurrent_stat_with_label        ⟶ IDENTIFIER COLON concurrent_stat_with_label_1 ;

concurrent_stat_without_label_1   ⟶ concurrent_assertion_stat
                                  ⟶ concurrent_procedure_call
                                  ⟶ concurrent_signal_assign_stat
                                  ⟶ proc_stat ;

concurrent_stat_with_label_1      ⟶ block_stat
                                  ⟶ comp_inst_stat
                                  ⟶ concurrent_assertion_stat
                                  ⟶ concurrent_procedure_call
                                  ⟶ concurrent_signal_assign_stat
                                  ⟶ generate_stat
                                  ⟶ proc_stat ;

block_stat                        ⟶
					KWBLOCK block_guard opt_KWIS
					    block_generic_stuff
					    block_port_stuff
					    block_decl_part
					KWBEGIN
					    opt_concurrent_stats
					KWEND KWBLOCK opt_IDENTIFIER SEMICOLON
				;

block_decl_part                   ⟶
                                  ⟶ block_decl_part block_decltve_item ;

block_port_stuff                  ⟶
                                  ⟶ port_clause opt_port_map_semi ;

block_generic_stuff               ⟶
                                  ⟶ generic_clause opt_generic_map_semi ;

block_guard                       ⟶
                                  ⟶ LEFTPAREN condition RIGHTPAREN ;

opt_port_map_semi                 ⟶
                                  ⟶ port_map SEMICOLON ;

opt_generic_map_semi              ⟶
                                  ⟶ generic_map SEMICOLON ;


#comp_inst_stat                   ⟶ IDENTIFIER COLON comp_inst_unit opt_generic_map opt_port_map SEMICOLON ;


comp_inst_stat                    ⟶ comp_mark KWGENERIC KWMAP named_association_list                 opt_port_map SEMICOLON
                                  ⟶ comp_mark KWPORT KWMAP    named_association_list opt_generic_map              SEMICOLON
                                  ⟶ comp_mark_with_keyword                           opt_generic_map opt_port_map SEMICOLON ;

comp_mark_with_keyword            ⟶ KWCOMPONENT comp_mark                 
                                  ⟶ KWENTITY simple_sel_name opt_arch_id  
                                  ⟶ KWCONFIGURATION mark ;

# NOTE: component instantiation statements without a keyword look
#	    like concurrent procedure calls

opt_generic_map                   ⟶
                                  ⟶ generic_map ;

generic_map                       ⟶ KWGENERIC KWMAP named_association_list ;

opt_port_map                      ⟶
                                  ⟶ port_map ;

port_map                          ⟶ KWPORT KWMAP named_association_list ;

concurrent_assertion_stat         ⟶ assertion_stat
                                  ⟶ KWPOSTPONED assertion_stat ;

concurrent_procedure_call         ⟶ mark SEMICOLON
                                  ⟶ procedure_call_stat_with_args
                                  ⟶ KWPOSTPONED procedure_call_stat ;

opt_postponed                     ⟶
                                  ⟶ KWPOSTPONED ;

concurrent_signal_assign_stat     ⟶ condal_signal_assign
                                  ⟶ KWPOSTPONED condal_signal_assign
                                  ⟶ sel_signal_assign
                                  ⟶ KWPOSTPONED sel_signal_assign ;

condal_signal_assign              ⟶ target OPPLE opt_guarded delay_mechanism condal_wavefrms SEMICOLON ;

condal_wavefrms                   ⟶ condal_wavefrms_1 wavefrm ;

condal_wavefrms_1                 ⟶
                                  ⟶ condal_wavefrms_1 wavefrm KWWHEN condition KWELSE ;

wavefrm                           ⟶ wavefrm_element reverse_more_wavefrm ;

reverse_more_wavefrm              ⟶
                                  ⟶ reverse_more_wavefrm COMMA wavefrm_element ;

wavefrm_element                   ⟶ expr opt_wavefrm_after ;

opt_wavefrm_after                 ⟶
                                  ⟶ KWAFTER expr ;

target                            ⟶ name
                                  ⟶ aggregate ;

opt_guarded                       ⟶
                                  ⟶ KWGUARDED ;

sel_signal_assign                 ⟶ KWWITH expr KWSELECT target OPPLE opt_guarded delay_mechanism sel_wavefrms SEMICOLON ;

sel_wavefrms                      ⟶ sel_wavefrms_1 wavefrm KWWHEN choices ;

sel_wavefrms_1                    ⟶
                                  ⟶ sel_wavefrms_1 wavefrm KWWHEN choices COMMA ;

generate_stat                     ⟶ generation_scheme KWGENERATE generate_declarative_items_block concurrent_stats KWEND KWGENERATE opt_IDENTIFIER SEMICOLON ;

generate_declarative_items_block  ⟶
                                  ⟶ generate_declarative_items KWBEGIN ;

generate_declarative_items        ⟶
                                  ⟶ generate_declarative_items generate_declarative_item ;

generate_declarative_item         ⟶ common_decltve_item
                                  ⟶ subprog_body
                                  ⟶ comp_decl
                                  ⟶ attribute_decl
                                  ⟶ attribute_spec
                                  ⟶ config_spec
                                  ⟶ disconnection_spec
                                  ⟶ signal_decl ;

proc_stat ⟶
					KWPROCESS opt_proc_sensitivity_list opt_KWIS
					    proc_decl_part
					KWBEGIN
					    seq_stats
					KWEND opt_postponed KWPROCESS opt_IDENTIFIER SEMICOLON
                                  ⟶ KWPOSTPONED KWPROCESS opt_proc_sensitivity_list opt_KWIS
					    proc_decl_part
					KWBEGIN
					    seq_stats
					KWEND opt_postponed KWPROCESS opt_IDENTIFIER SEMICOLON
				;

opt_KWIS                          ⟶
                                  ⟶ KWIS ;

proc_decl_part                    ⟶
                                  ⟶ proc_decl_part proc_decltve_item ;

opt_proc_sensitivity_list         ⟶
                                  ⟶ LEFTPAREN sensitivity_list RIGHTPAREN ;

sensitivity_list                  ⟶ signal_name reverse_opt_more_sensitivities ;

reverse_opt_more_sensitivities    ⟶
                                  ⟶ reverse_opt_more_sensitivities COMMA signal_name ;

signal_name                       ⟶ name ;

#--------------------------------------------------
#--  Sequential Statements
#--------------------------------------------------

seq_stats                         ⟶ rev_seq_stats ;

rev_seq_stats                     ⟶
                                  ⟶ rev_seq_stats seq_stat ;

seq_stat                          ⟶ assertion_stat        
                                  ⟶ report_stat           
                                  ⟶ case_stat             
                                  ⟶ exit_stat             
                                  ⟶ if_stat               
                                  ⟶ loop_stat             
                                  ⟶ next_stat             
                                  ⟶ null_stat             
                                  ⟶ procedure_call_stat   
                                  ⟶ return_stat           
                                  ⟶ signal_assign_stat    
                                  ⟶ variable_assign_stat  
                                  ⟶ wait_stat ;

assertion_stat                    ⟶ KWASSERT condition opt_assertion_report opt_assertion_severity SEMICOLON ;

report_stat                       ⟶ KWREPORT expr opt_assertion_severity SEMICOLON ;

opt_assertion_severity            ⟶
                                  ⟶ KWSEVERITY expr ;

opt_assertion_report              ⟶
                                  ⟶ KWREPORT expr ;

case_stat                         ⟶ KWCASE expr KWIS case_stat_alternative more_case_stat_alternatives KWEND KWCASE SEMICOLON ;

case_stat_alternative             ⟶ KWWHEN choices ARROW seq_stats ;

more_case_stat_alternatives       ⟶
                                  ⟶ more_case_stat_alternatives case_stat_alternative ;

if_stat                           ⟶ KWIF condition KWTHEN seq_stats if_stat_1 if_stat_2 KWEND KWIF SEMICOLON ;

if_stat_2                         ⟶
                                  ⟶ KWELSE seq_stats ;

if_stat_1                         ⟶
                                  ⟶ if_stat_1  KWELSIF condition KWTHEN seq_stats ;

condition                         ⟶ expr ;

loop_stat                         ⟶ opt_label opt_iteration_scheme KWLOOP seq_stats KWEND KWLOOP opt_IDENTIFIER SEMICOLON ;

opt_iteration_scheme              ⟶
                                  ⟶ iteration_scheme ;

opt_label                         ⟶
                                  ⟶ IDENTIFIER COLON ;

next_stat                         ⟶ KWNEXT opt_IDENTIFIER opt_when SEMICOLON ;

exit_stat                         ⟶ KWEXIT opt_IDENTIFIER opt_when SEMICOLON ;

opt_when                          ⟶
                                  ⟶ KWWHEN condition ;

null_stat                         ⟶ KWNULL SEMICOLON ;

procedure_call_stat               ⟶ procedure_call_stat_without_args
                                  ⟶ procedure_call_stat_with_args ;

procedure_call_stat_without_args  ⟶ mark SEMICOLON ;

procedure_call_stat_with_args     ⟶ name2 SEMICOLON ;

return_stat                       ⟶ KWRETURN opt_expr SEMICOLON ;

opt_expr                          ⟶
                                  ⟶ expr ;

signal_assign_stat                ⟶ target OPPLE delay_mechanism wavefrm SEMICOLON ;

delay_mechanism                   ⟶
                                  ⟶ KWTRANSPORT
                                  ⟶ KWINERTIAL
                                  ⟶ KWREJECT expr KWINERTIAL ;

variable_assign_stat              ⟶ target VARASSIGN expr SEMICOLON ;

wait_stat                         ⟶ KWWAIT opt_wait_on opt_wait_until opt_wait_for SEMICOLON ;

opt_wait_for                      ⟶
                                  ⟶ KWFOR expr ;

opt_wait_until                    ⟶
                                  ⟶ KWUNTIL condition ;

opt_wait_on                       ⟶
                                  ⟶ KWON sensitivity_list ;

#--------------------------------------------------
#--  Components and Configurations
#--------------------------------------------------

comp_decl                         ⟶ KWCOMPONENT IDENTIFIER opt_KWIS opt_generic_and_port_clauses KWEND KWCOMPONENT opt_IDENTIFIER SEMICOLON ;

block_config                      ⟶ KWFOR name use_clauses config_items KWEND KWFOR SEMICOLON ;

config_items                      ⟶
                                  ⟶ config_items config_item ;

use_clauses                       ⟶
                                  ⟶ use_clauses use_clause ;

config_item                       ⟶ block_config  
                                  ⟶ comp_config ;

comp_config                       ⟶ KWFOR comp_spec opt_comp_binding_indic opt_block_config KWEND KWFOR SEMICOLON ;

opt_block_config                  ⟶
                                  ⟶ block_config ;

opt_comp_binding_indic            ⟶
                                  ⟶ incremental_binding_indic SEMICOLON 
                                  ⟶ pre_binding_indic SEMICOLON ;

config_spec                       ⟶ KWFOR comp_spec binding_indic SEMICOLON ;

comp_spec                         ⟶ inst_list COLON comp_mark ;

comp_mark                         ⟶ mark ;

inst_list                         ⟶ idf_list
                                  ⟶ KWALL
                                  ⟶ KWOTHERS ;

# binding_indic et al is to be invoked with the component decl
# as the selected scope
#

binding_indic                     ⟶ pre_binding_indic ;

pre_binding_indic                 ⟶ KWUSE entity_aspect opt_generic_map opt_port_map ;

incremental_binding_indic         ⟶ generic_map opt_port_map
                                  ⟶ port_map ;

entity_aspect                     ⟶ KWENTITY simple_sel_name opt_arch_id
                                  ⟶ KWCONFIGURATION mark
                                  ⟶ KWOPEN ;

opt_arch_id                       ⟶
                                  ⟶ LEFTPAREN IDENTIFIER RIGHTPAREN ;


