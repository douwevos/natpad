<project name="java-mule" default="build">
	
	<echo>${basedir}</echo>

	<property name="natpad.cup.jar" location="../../natpad.cup/build/natpad-cup.jar"/>
	<available property="natpad.cup.jar.exists" file="${natpad.cup.jar}"/>
	
    <target name="build-natpad-cup" unless="natpad.cup.jar.exists">
		<ant antfile="../natpad.cup/build.xml" dir="../../natpad.cup/"/>
    </target>

	<uptodate property="natpad.cup.not.up.to.date" targetfile="${natpad.cup.jar}" >
		<srcfiles dir="./src/generated" includes="**/*"/>
	</uptodate>


	<!--
	          
	          LUA
	
	  -->	
	<!--target name="generate-lua-parser" depends="build-natpad-cup"-->
	<target name="generate-lua-parser" depends="build-natpad-cup" if="${lua.cup.or.config.changed}">
    	<typedef classpath="../../natpad.cup/build/natpad-cup.jar" resource="net/natpad/cup/ant/taskdefs.properties"/>
		<natpadcup expect="6" grammar="etc/lua.cup" jsonconfig="./etc/lua-parser-config.json"/>
	</target>
	
	<uptodate property="lua.cup.not.up.to.date" targetfile="./etc/lua.cup" >
		<srcfiles dir="./src/generated" includes="**/*"/>
	</uptodate>

	<uptodate property="lua.parser.config.not.up.to.date" targetfile="./etc/lua-parser-config.json" >
		<srcfiles dir="./src/generated" includes="**/*"/>
	</uptodate>

	<condition property="lua.cup.or.config.changed">
		<or>
			<istrue value="${lua.cup.not.up.to.date}"/>
			<istrue value="${lua.parser.config.not.up.to.date}"/>
			<istrue value="${natpad.cup.not.up.to.date}"/>
			<isfalse value="${natpad.cup.jar.exists}"/>
		</or>
	</condition>







	<!--
	          
	          PYTHON
	
	  -->	
	<!--target name="generate-python-parser" depends="build-natpad-cup"-->
	<target name="generate-python-parser" depends="build-natpad-cup" if="${python.cup.or.config.changed}">
    	<typedef classpath="../../natpad.cup/build/natpad-cup.jar" resource="net/natpad/cup/ant/taskdefs.properties"/>
		<natpadcup expect="6" grammar="etc/python.cup" jsonconfig="./etc/python-parser-config.json"/>
	</target>
	
	<uptodate property="python.cup.not.up.to.date" targetfile="./etc/python.cup" >
		<srcfiles dir="./src/generated" includes="**/*"/>
	</uptodate>

	<uptodate property="python.parser.config.not.up.to.date" targetfile="./etc/python-parser-config.json" >
		<srcfiles dir="./src/generated" includes="**/*"/>
	</uptodate>

	<condition property="python.cup.or.config.changed">
		<or>
			<istrue value="${python.cup.not.up.to.date}"/>
			<istrue value="${python.parser.config.not.up.to.date}"/>
			<istrue value="${natpad.cup.not.up.to.date}"/>
			<isfalse value="${natpad.cup.jar.exists}"/>
		</or>
	</condition>

	
	
	
	





	<!--
	          
	          VHDL
	
	  -->	
	<!--target name="generate-vhdl-parser" depends="build-natpad-cup"-->
	<target name="generate-vhdl-parser" depends="build-natpad-cup" if="${vhdl.cup.or.config.changed}">
    	<typedef classpath="../../natpad.cup/build/natpad-cup.jar" resource="net/natpad/cup/ant/taskdefs.properties"/>
		<natpadcup expect="6" grammar="etc/vhdl.cup" jsonconfig="./etc/vhdl-parser-config.json"/>
	</target>
	
	<uptodate property="vhdl.cup.not.up.to.date" targetfile="./etc/vhdl.cup" >
		<srcfiles dir="./src/generated" includes="**/*"/>
	</uptodate>

	<uptodate property="vhdl.parser.config.not.up.to.date" targetfile="./etc/vhdl-parser-config.json" >
		<srcfiles dir="./src/generated" includes="**/*"/>
	</uptodate>

	<condition property="vhdl.cup.or.config.changed">
		<or>
			<istrue value="${vhdl.cup.not.up.to.date}"/>
			<istrue value="${vhdl.parser.config.not.up.to.date}"/>
			<istrue value="${natpad.cup.not.up.to.date}"/>
			<isfalse value="${natpad.cup.jar.exists}"/>
		</or>
	</condition>	
	
	
	
	
	
	

	<!--
	          
	          EIFFEL
	
	  -->	
	<!--target name="generate-eiffel-parser" depends="build-natpad-cup"-->
	<target name="generate-eiffel-parser" depends="build-natpad-cup" if="${eiffel.cup.or.config.changed}">
    	<typedef classpath="../../natpad.cup/build/natpad-cup.jar" resource="net/natpad/cup/ant/taskdefs.properties"/>
		<natpadcup expect="6" grammar="etc/eiffel.cup" jsonconfig="./etc/eiffel-parser-config.json"/>
	</target>
	
	<uptodate property="eiffel.cup.not.up.to.date" targetfile="./etc/eiffel.cup" >
		<srcfiles dir="./src/generated" includes="**/*"/>
	</uptodate>

	<uptodate property="eiffel.parser.config.not.up.to.date" targetfile="./etc/eiffel-parser-config.json" >
		<srcfiles dir="./src/generated" includes="**/*"/>
	</uptodate>

	<condition property="eiffel.cup.or.config.changed">
		<or>
			<istrue value="${eiffel.cup.not.up.to.date}"/>
			<istrue value="${eiffel.parser.config.not.up.to.date}"/>
			<istrue value="${natpad.cup.not.up.to.date}"/>
			<isfalse value="${natpad.cup.jar.exists}"/>
		</or>
	</condition>	
	
	
	
	
	
	<target name="build" depends="generate-lua-parser,generate-python-parser,generate-vhdl-parser,generate-eiffel-parser">
	</target>
	
</project>




